var tabledata = [
{name: "3DS-Code-Loader",
 url: "https://github.com/SinaMegapolis/3DS-Code-Loader",
 src: "c++",
 cats: "loader",
 last: "20220801",
 vers: "7.6",
 desc: "IDA Pro 7.6 Plugin to load ExeFS and CRO code from CXI files."},

{name: "3ds_ida",
 url: "https://github.com/kynex7510/3ds_ida",
 src: "py",
 cats: "loader",
 last: "20231008",
 desc: "IDA Pro resources for reverse engineering Nintendo 3DS binaries."},

{name: "3DSX Loader",
 url: "https://github.com/0xEBFE/3DSX-IDA-PRO-Loader",
 src: "py",
 cats: "loader",
 last: "20211226",
 desc: "IDA PRO Loader for 3DSX files"},

{name: "aarch64-sysreg-ida",
 url: "https://github.com/TrungNguyen1909/aarch64-sysreg-ida",
 src: "py",
 last: "20230104",
 desc: "IDA plugin to show ARM MSRs nicely."},

{name: "abyss",
 url: "https://github.com/patois/abyss",
 src: "py",
 cats: "decomp",
 last: "20221026",
 desc: "Postprocess Hexrays Decompiler Output"},

{name: "ActionScript 3",
 url: "https://github.com/KasperskyLab/ActionScript3",
 src: "py",
 cats: "debug, loader, proc",
 last: "20181005",
 vers: "7.1",
 desc: "An ActionScript 3 processor module and Flash debugger plugin."},

{name: "Adobe Flash disassembler",
 url: "https://hex-rays.com/contests/2009/SWF/ReadMe.txt",
 src: "c++",
 cats: "loader, proc",
 desc: "The 2 plugins present in this archive will enable IDA to parse SWF files, load all SWF tags as segments for fast search and retrieval, parse all tags that can potentially contain ActionScript2 code, discover all such code(a dedicated processor module has been written for it) and even name the event functions acording to event handled in it (eg. OnInitialize). [Download](https://hex-rays.com/contests/2009/SWF/swf.zip)"},

{name: "alleycat",
 url: "https://github.com/devttys0/ida/tree/master/plugins/alleycat",
 src: "py",
 last: "20210602",
 desc: "* Finds paths to a given code block inside a function\n* Finds paths between two or more functions\n* Generates interactive call graphs\n* Fully scriptable"},

{name: "ALLirt",
 url: "https://github.com/push0ebp/ALLirt",
 src: "py",
 last: "20190209",
 desc: "Converts All of libc to signatures for IDA Pro FLIRT Plugin. and utility make sig with FLAIR easily."},

{name: "AlphaGolang",
 url: "https://github.com/SentineLabs/AlphaGolang",
 src: "py",
 last: "20240201",
 vers: "7.6",
 desc: "IDApython Scripts for Analyzing Golang Binaries."},

{name: "AMIE",
 url: "https://github.com/NeatMonster/AMIE",
 src: "py",
 last: "20230329",
 vers: "7.4",
 desc: "A Minimalist Instruction Extender. AMIE is a Python rework of FRIEND that focuses solely on the ARM architecture (only AArch32 and AArch64 are supported). It is both lightweight and dependency-free, and provides the most relevant and up-to-date information about the ARM system registers and instructions."},

{name: "Amnesia",
 url: "https://github.com/duo-labs/idapython",
 src: "py",
 last: "20180426",
 desc: "Amnesia is an IDAPython module designed to use byte level heuristics to find ARM thumb instructions in undefined bytes in an IDA Pro database. Currently, the heuristics in this module find code in a few different ways. Some instructions identify and define new code by looking for comon byte sequences that correspond to particular ARM opcodes. Other functions in this module define new functions based on sequences of defined instructions."},

{name: "Android/Linux vmlinux Loader",
 url: "https://github.com/nforest/droidimg",
 src: "py",
 cats: "loader",
 last: "20231118",
 vers: "7.0",
 desc: "vmlinux.py is a python script which can load vmlinux image in both IDA Pro"},

{name: "Android Debugging",
 url: "https://github.com/techbliss/ADB_Helper_QT_Super_version",
 src: "py",
 cats: "debug",
 last: "20150405",
 desc: "This version have both support for native arm debugging via usb and sdk ADV manager."},

{name: "Android Scripts Collection",
 url: "https://github.com/strazzere/android-scripts",
 src: "py",
 last: "20200503",
 desc: "Collection of Android reverse engineering scripts that make my life easier"},

{name: "Andromeda-payload",
 url: "https://github.com/0xEBFE/Andromeda-payload",
 src: "py",
 last: "20130330",
 vers: "6.4",
 desc: "IDAPython script for decryption payload of Andromeda malware."},

{name: "AntiDebugSeeker",
 url: "https://github.com/LAC-Japan/IDA_Plugin_AntiDebugSeeker",
 src: "py",
 last: "20240326",
 desc: "Automatically identify and extract potential anti-debugging techniques used by malware."},

{name: "antiVM",
 url: "https://github.com/Hipepper/antiVM",
 src: "py",
 last: "20220902",
 vers: "7.0",
 desc: "antiVM aims to quickly identify anti-virtual machine and anti-sandbox behavior. This can speed up malware analysis."},

{name: "AntiXorstr",
 url: "https://github.com/lstaroth/AntiXorstr",
 src: "py",
 cats: "deobf",
 last: "20230514",
 vers: "7.0",
 desc: "Enumerate and automatically decrypt encrypted strings implemented using C++ template techniques without concerning about the algorithmic implementation of the encrypted strings."},

{name: "AphroditeF5",
 url: "https://github.com/leommxj/AphroditeF5",
 src: "py",
 last: "20230726",
 desc: "IDA Pro collapse plugin"},

{name: "Apihashes v2",
 url: "https://github.com/KasperskyLab/Apihashes",
 src: "py",
 last: "20220512",
 desc: "Automatically identify and mark known hash values for API function names."},

{name: "api_palette",
 url: "https://github.com/0xKira/api_palette",
 src: "py",
 cats: "dev",
 last: "20220824",
 vers: "7.5",
 desc: "A code-searching/completion tool, for IDA APIs. It will be useful for those who write scripts for IDA (in the CLI or the script snippets window)."},

{name: "APIScout",
 url: "https://github.com/danielplohmann/apiscout",
 src: "py",
 last: "20230327",
 vers: "7.5",
 desc: "This project aims at simplifying Windows API import recovery. As input, arbitrary memory dumps for a known environment can be processed (please note: a reference DB has to be built first, using apiscout/db_builder). The output is an ordered list of identified Windows API references with some meta information, and an ApiVector fingerprint. Includes a convenience GUI wrapper for use in IDA."},

{name: "Appcut",
 url: "https://github.com/desperadosec/appcut",
 src: "py",
 last: "20220906",
 desc: "A helper tool to grab binary blobs from IDA-analyzed binaries and wrap them via Python."},

{name: "AutoLibcFlags",
 url: "https://github.com/0xMirasio/IDALibcAutoFlags",
 src: "py",
 cats: "decomp",
 last: "20240311",
 desc: "Simple plugin to replace decimals flags with enums on standard libc functions."},

{name: "AutoRE",
 url: "https://github.com/a1ext/auto_re",
 src: "py",
 last: "20210804",
 desc: "Auto-renaming plugin with tagging support."},

{name: "AutoRename",
 url: "https://github.com/crifan/AutoRename",
 src: "py",
 last: "20240126",
 desc: "Automatically rename very simple functions."},

{name: "AutoResolv",
 url: "https://github.com/0xMirasio/AutoResolv",
 src: "py",
 last: "20221015",
 vers: "7.0",
 desc: "Resolve custom libraries in main project. Refactor call type and code."},

{name: "Away_From_Sub_Function_IN_IDA",
 url: "https://github.com/H4lo/Away_From_Sub_Function_IN_IDA",
 src: "py",
 cats: "int",
 last: "20221209",
 vers: "7.5",
 desc: "Use OpenAI to help you better translate function meanings and restore symbol tables from sub_xxxx functions in IDA Pro."},

{name: "Back 2 The Future",
 url: "https://github.com/SafeBreach-Labs/Back2TheFuture",
 src: "py",
 cats: "deobf",
 last: "20210809",
 desc: "Find patterns of vulnerabilities on Windows in order to find 0-day and write exploits of 1-days. We use Microsoft security updates in order to find the patterns."},

{name: "bankswitch",
 url: "https://github.com/patois/bankswitch",
 src: "c++",
 last: "20181218",
 vers: "4.9",
 desc: "Nintendo Entertainment System (NES) bank switcher: plugin for NES ROMs, simulates bank switching/paging."},

{name: "BAP IDA Python",
 url: "https://github.com/binaryanalysisplatform/bap-ida-python",
 src: "py",
 cats: "int",
 last: "20200212",
 vers: "7.3",
 desc: "Integrate BAP (Binary Analysis Platform) with IDA, providing functionality such as function info augmentation, taint propagation, BIR attribute tagging, and more."},

{name: "Batch-IDA",
 url: "https://github.com/chnzzh/batch-ida",
 src: "py",
 cats: "int",
 last: "20240205",
 vers: "7.7",
 desc: "A python library for generating IDA Pro files in batch mode & comparing executable files use bindiff in batch mode."},

{name: "BDSDevHelper",
 url: "https://github.com/Redbeanw44602/BDSDevHelper",
 src: "py",
 last: "20230609",
 desc: "An IDA plugin to help you develop bedrock dedicated server."},

{name: "Beautify",
 url: "https://github.com/P4nda0s/IDABeautify",
 src: "py",
 cats: "decomp",
 last: "20220201",
 vers: "7.7",
 desc: "An IDA plugin for making pseudocode better."},

{name: "BetterCallStack",
 url: "https://github.com/AntonKukoba1/BetterCallStack",
 src: "c++",
 cats: "debug",
 last: "20230814",
 vers: "7.7",
 desc: "Improve call stack in Windows x64 debugger."},

{name: "bextr-helper",
 url: "https://github.com/Goatman13/bextr-helper",
 src: "py",
 last: "20221130",
 vers: "7.5",
 desc: "Create comment for bextr opcode with easy to read operation."},

{name: "Binary2Name IDA Client",
 url: "https://github.com/snirgreen-debug/binary2name",
 src: "py",
 cats: "int",
 last: "20230404",
 desc: "IDA client to Binary2Name which predicts common functions names in binary files."},

{name: "BinaryAI Plugin",
 url: "https://github.com/binaryai/plugins",
 src: "py",
 cats: "int",
 last: "20230411",
 vers: "7.7",
 desc: "Ghidra/IDA Pro plugins to load similarity result from binaryai.net."},

{name: "BinAuthor",
 url: "https://github.com/g4hsean/BinAuthor",
 src: "py",
 last: "20200504",
 desc: "Match an author to an unknown binary."},

{name: "BinCAT",
 url: "https://github.com/airbus-seclab/bincat",
 src: "py",
 last: "20240211",
 vers: "7.4",
 desc: "BinCAT is a static Binary Code Analysis Toolkit, designed to help reverse engineers, directly from IDA."},

{name: "BinClone",
 url: "https://github.com/BinSigma/BinClone",
 src: "c++",
 last: "20150404",
 desc: "BinClone: detecting code clones in malware [SERE 2014]"},

{name: "BinDiff",
 url: "http://www.zynamics.com/bindiff.html",
 last: "20210607",
 desc: "BinDiff by Zynamics (now Google) is a comparison tool for binary files, that assists vulnerability researchers and engineers to quickly find differences and similarities in disassembled code."},

{name: "BinExport",
 url: "https://github.com/google/binexport",
 src: "c++",
 cats: "int",
 last: "20240513",
 vers: "7.6",
 desc: "Export disassemblies into Protocol Buffers. BinExport is the exporter component of BinDiff. It is a plugin/extension for IDA that exports disassembly data into the Protocol Buffer format that BinDiff requires."},

{name: "Binkit",
 url: "https://github.com/ohjeongwook/binkit/tree/master/src/plugin",
 src: "py",
 cats: "int",
 last: "20201005",
 desc: "Binkit Plugin For IDA. Use this plugin to load diffing result files (*.json)..."},

{name: "BinNavi",
 url: "https://github.com/google/binnavi",
 cats: "trace",
 last: "20201023",
 desc: "BinNavi is a binary analysis IDE - an environment that allows users to inspect, navigate, edit, and annotate control-flow-graphs of disassembled code, do the same for the callgraph of the executable, collect and combine execution traces, and generally keep track of analysis results among a group of analysts."},

{name: "Bin Sourcerer",
 url: "https://github.com/BinSigma/BinSourcerer",
 src: "py",
 last: "20150204",
 desc: "BinSourcerer (a.k.a RE-Source Online) is an assembly to source code matching framework for binary auditing and malware analysis."},

{name: "BinSync",
 url: "https://github.com/angr/binsync",
 src: "py",
 cats: "collab",
 last: "20240515",
 vers: "7.3",
 desc: "Decompiler collaboration tool built on the Git versioning system to enable fined grained reverse engineering collaboration regardless of decompiler."},

{name: "Bip",
 url: "https://github.com/synacktiv/bip",
 src: "py",
 last: "20200909",
 desc: "Bip is a project which aims to simplify the usage of python for interacting with IDA. Its main goals are to facilitate the usage of python in the interactive console of IDA and the writing of plugins."},

{name: "blc: Binary Lifting Contraption",
 url: "https://github.com/cseagle/blc",
 src: "c++",
 cats: "decomp, int",
 last: "20240115",
 vers: "7.5",
 desc: "Integrate Ghidra's decompiler as an Ida plugin."},

{name: "Bootroom Analysis Library",
 url: "https://github.com/digitalbond/IBAL",
 src: "py",
 last: "20150212",
 desc: "IBAL is the IDA Pro Bootrom Analysis Library, which contains a number of useful functions for analyzing embedded ROMs."},

{name: "Bosch ME7",
 url: "https://github.com/AndyWhittaker/IDAProBoschMe7x",
 src: "c++",
 last: "20180122",
 desc: "Siemens Bosch ME7.x Disassembler Helper for IDA Pro"},

{name: "BRUTAL IDA",
 url: "https://github.com/tmr232/BRUTAL-IDA",
 src: "py",
 last: "20190801",
 vers: "7.3",
 desc: "Block Redo & Undo To Achieve Legacy IDA."},

{name: "caesar",
 url: "https://github.com/head47/caesar",
 src: "py",
 last: "20230217",
 desc: "IDA plugin that uses called function lists to recognize functions. (Archived)."},

{name: "Capa Explorer",
 url: "https://github.com/fireeye/capa/tree/master/capa/ida/plugin",
 src: "py",
 cats: "int",
 last: "20240516",
 vers: "7.7",
 desc: "Capa explorer is an IDAPython plugin that integrates the FLARE team's open-source framework, capa, with IDA Pro. capa is a framework that uses a well-defined collection of rules to identify capabilities in a program."},

{name: "CGC Loader",
 url: "https://github.com/cseagle/cgc_ldr",
 src: "c++",
 cats: "loader",
 last: "20180409",
 vers: "7.0",
 desc: "IDA Loader for DARPA CGC binaries."},

{name: "CGEN",
 url: "https://github.com/yifanlu/cgen",
 src: "scm",
 last: "20151228",
 desc: "CGEN with support for generating IDA Pro IDP modules."},

{name: "Chuchu",
 url: "https://github.com/hazzaaclark/chuchu",
 src: "c++",
 cats: "decomp, loader",
 last: "20231111",
 desc: "SEGA Dreamcast Binary Decompiler for IDA Pro."},

{name: "Class Informer",
 url: "http://sourceforge.net/projects/classinformer/",
 src: "c++",
 last: "20180714",
 vers: "7.1",
 desc: "Scans an MSVC 32bit target IDB for vftables with C++ RTTI, and MFC RTCI type data. Places structure defs, names, labels, and comments to make more sense of class vftables (\"Virtual Function Table\") and make them read easier as an aid to reverse engineering. Creates a list window with found vftables for browsing."},

{name: "classinformer-ida8",
 url: "https://github.com/herosi/classinformer-ida8",
 src: "c++",
 last: "20230922",
 vers: "8.2",
 desc: "IDA Class Informer plugin for IDA 8.x (see Class Informer)."},

{name: "Classy",
 url: "https://github.com/RicBent/Classy",
 src: "py",
 last: "20220204",
 desc: "Helps users easily manage classes in IDA Pro. Vtables can be generated by selecting a range, functions can be assigned to classes, their signatures can be easily editing and mangled, IDA structs can be assigned, C headers can be generated, probably more."},

{name: "cmake-ida",
 url: "https://github.com/Elemecca/cmake-ida",
 cats: "dev",
 last: "20180102",
 vers: "7.0",
 desc: "Build IDA Pro modules with CMake"},

{name: "codatify",
 url: "https://github.com/devttys0/ida/tree/master/plugins/codatify",
 src: "py",
 last: "20210602",
 desc: "* Defines ASCII strings that IDA's auto analysis missed\n* Defines functions/code that IDA's auto analysis missed\n* Converts all undefined bytes in the data segment into DWORDs (thus allowing IDA to resolve function and jump table pointers)"},

{name: "Codatify (IDC)",
 url: "https://github.com/tin-z/codatify",
 src: "idc",
 last: "20240111",
 desc: "IDC version of codatify IDAPython script."},

{name: "CodeCut",
 url: "https://github.com/JHUAPL/CodeCut",
 src: "py",
 last: "20231122",
 vers: "7.0",
 desc: "Locating Object File Boundaries in IDA Pro with LFA and MaxCut algorithms. Datasets for testing CodeCut solutions."},

{name: "Codemap",
 url: "https://github.com/c0demap/codemap",
 src: "py",
 cats: "trace",
 last: "20160701",
 vers: "6.6",
 desc: "Codemap is a binary analysis tool for \"run-trace visualization\" provided as IDA plugin."},

{name: "collabREate",
 url: "https://github.com/cseagle/collabREate",
 src: "c++",
 cats: "collab",
 last: "20210901",
 vers: "7.5",
 desc: "collabREate is a plugin for IDA Pro that is designed to provide a collaborative reverse engineering capability for multiple IDA users working on the same binary file."},

{name: "CollaRE",
 url: "https://github.com/Martyx00/CollaRE",
 src: "py",
 cats: "collab",
 last: "20240327",
 desc: "Multi-tool reverse engineering collaboration solution. CollaRE is a tool for collaborative reverse engineering that aims to allow teams that do need to use more then one tool during a project to collaborate without the need to share the files on a separate locations."},

{name: "COMFinder",
 url: "https://github.com/howmp/comfinder",
 src: "py",
 last: "20220930",
 desc: "IDA plugin for COM."},

{name: "COMFinder",
 url: "https://github.com/howmp/COMFinder",
 src: "c++",
 last: "20220930",
 vers: "7.6",
 desc: "IDA plugin for COM (Chinese)."},

{name: "Comida",
 url: "https://github.com/airbus-cert/comida",
 src: "py",
 cats: "decomp",
 last: "20230727",
 desc: "Comida is a plugin which searches all the references of the GUID COM object (Common Object Model) and deduce the associated type using the Hexrays plugin to improve the readability of the code."},

{name: "Condstanta",
 url: "https://github.com/Accenture/Condstanta",
 src: "py",
 last: "20220329",
 vers: "7.5",
 desc: "Search for constant values that are used in conditional statements such as if and switch-case or for functions that contain multiple specific constants."},

{name: "ConfuserEx Unflattening",
 url: "https://github.com/govcert-ch/ConfuserEx_IDAPython",
 src: "py",
 cats: "deobf",
 last: "20220915",
 desc: "IDA Python deobfuscation script for ConfuserEx binaries."},

{name: "Continuum",
 url: "https://github.com/zyantific/continuum",
 src: "py",
 last: "20160913",
 vers: "6.9",
 desc: "Continuum is an IDA Pro plugin adding multi-binary project support, allowing fast navigation in applications involving many shared libraries."},

{name: "Copy_RVA",
 url: "https://github.com/RomanRybachek/Copy_RVA",
 src: "py",
 last: "20230728",
 desc: "Copy RVA under cursor to clipboard."},

{name: "Cortex M Firmware",
 url: "https://github.com/duo-labs/idapython",
 src: "py",
 last: "20180426",
 desc: "The Cortex M Firmware module grooms an IDA Pro database containing firmware from an ARM Cortex M microcontroller. This module will annotate the firmware vector table, which contains a number of function pointers. This vector table annotation will cause IDA Pro to perform auto analysis against the functions these pointers point to. "},

{name: "cranalyzer",
 url: "https://github.com/ep1h/cranalyzer",
 src: "py",
 last: "20230517",
 desc: "IDA plugin for searching functions by specific filters."},

{name: "CrowdDetox",
 url: "https://github.com/CrowdStrike/CrowdDetox",
 src: "c++",
 cats: "decomp",
 last: "20210503",
 vers: "6.4",
 desc: "The CrowdDetox plugin for Hex-Rays automatically removes junk code and variables from Hex-Rays function decompilations."},

{name: "CTO: Call Tree Overviewer",
 url: "https://github.com/herosi/CTO",
 src: "py",
 last: "20240304",
 vers: "7.4",
 desc: "IDA plugin for creating a simple and efficient function call tree graph. It can also summarize function information such as internal function calls, API calls, static linked library function calls, unresolved indirect function calls, string references, structure member accesses, specific comments."},

{name: "D-810",
 url: "https://gitlab.com/eshard/d810",
 src: "py",
 cats: "decomp, deobf",
 last: "20220805",
 vers: "8.0",
 desc: "D-810 is an IDA Pro plugin which can be used to deobfuscate code at decompilation time by modifying IDA Pro microcode."},

{name: "Dalvik Header",
 url: "https://github.com/strazzere/dalvik-header-plugin",
 src: "c++",
 cats: "decomp",
 last: "20130122",
 desc: "This is a simple Dalvik header plugin for IDA Pro"},

{name: "DataFlowAnalysis-miasm",
 url: "https://github.com/Learner0x5a/DataFlowAnalysis-miasm",
 src: "py",
 last: "20220517",
 vers: "7.6",
 desc: "Generate data-flow graph and def-use graph for a function based on miasm and IDA Pro."},

{name: "Data Xref Counter",
 url: "https://github.com/onethawt/idapyscripts",
 src: "py",
 last: "20150917",
 desc: "Enumerates all of the the x-references in a specific segment and counts the frequency of usage. The plugin displays the data in QtTableWidget and lets the user filter and sort the references. You can also export the data to a CSV file."},

{name: "DBGHider",
 url: "https://github.com/iweizime/DBGHider",
 src: "py",
 cats: "debug",
 last: "20180619",
 vers: "7.0",
 desc: "An IDA plugin aims to hide debugger from processes (Windows)."},

{name: "DebugAutoPatch",
 url: "https://github.com/scottmudge/debugautopatch",
 src: "py",
 last: "20190906",
 desc: "Patching system improvement plugin for IDA."},

{name: "Debugger",
 url: "https://github.com/cseagle/sk3wldbg",
 src: "c++",
 cats: "debug",
 last: "20230417",
 vers: "6.6",
 desc: "Debugger plugin for IDA Pro backed by the Unicorn Engine"},

{name: "Debugger_Timer",
 url: "https://github.com/Mohamed-Adil-Cyber/Debugger_Timer",
 src: "py",
 cats: "debug",
 last: "20231107",
 desc: "Simple timer plugin for IDA, use Ctrl+Shift+D to start and end the timer."},

{name: "dec2struct",
 url: "https://github.com/krystalgamer/dec2struct",
 src: "py",
 last: "20170906",
 desc: "Easily setup vtables in IDA using declaration files."},

{name: "decomp2dbg",
 url: "https://github.com/mahaloz/decomp2dbg",
 src: "py",
 cats: "decomp, debug, int",
 last: "20240509",
 vers: "7.0",
 desc: "Plugin to introduce interactive symbols into your debugger from your decompiler."},

{name: "Deep Winter",
 url: "https://github.com/evil33333333/deep-winter",
 cats: "ui",
 last: "20221013",
 vers: "7.0",
 desc: "Black IDA pro theme for darkness enthusiasts."},

{name: "DemangledStructNaming",
 url: "https://github.com/AntonKukoba1/DemangledStructNaming",
 src: "c++",
 last: "20230814",
 vers: "7.7",
 desc: "Ida plugin to improve Create structure from selection naming."},

{name: "deREferencing",
 url: "https://github.com/danigargu/deREferencing",
 src: "py",
 cats: "debug",
 last: "20230221",
 vers: "7.1",
 desc: "IDA Pro plugin that implements more user-friendly register and stack views."},

{name: "Describe Key",
 url: "https://github.com/vmallet/ida-describekey",
 src: "py",
 last: "20220408",
 vers: "7.5",
 desc: "Quickly learn what a shortcut does. Describe Key is a very simple IDA Pro plugin: invoke it, press a shortcut, and instantly see what actions are associated with the shortcut. Quick and easy, call it from anywhere in IDA."},

{name: "Diaphora",
 url: "https://github.com/joxeankoret/diaphora",
 src: "py",
 last: "20240409",
 vers: "7.4",
 desc: "Diaphora (διαφορά, Greek for 'difference') is a program diffing plugin for IDA Pro, similar to Zynamics Bindiff or the FOSS counterparts DarunGrim, TurboDiff, etc... It was released during SyScan 2015."},

{name: "Docker IDA",
 url: "https://github.com/intezer/docker-ida",
 src: "py",
 last: "20171119",
 vers: "6.9",
 desc: "Run IDA Pro disassembler in Docker containers for automating, scaling and distributing the use of IDAPython scripts."},

{name: "docker-idapro",
 url: "https://github.com/blacktop/docker-idapro",
 last: "20240407",
 vers: "7.7",
 desc: "IDA Pro Docker Image (For use as an ipsw pipeline)."},

{name: "doelf",
 url: "https://github.com/antonpasm/doelf",
 src: "py",
 last: "20220531",
 vers: "7.5",
 desc: "A plugin for IDA Pro to export the symbols recognized to the ELF symbol table. It can create an ELF with debug information from any dump file."},

{name: "dotNIET",
 url: "https://github.com/synacktiv/dotNIET",
 src: "py",
 last: "20210630",
 vers: "7.5",
 desc: "Import missing symbols (usually few thousands) which are resolved at runtime by .NET Native compiled binaries. These symbols lie in SharedLibrary.dll and are not exported by this one."},

{name: "DOXBox Debugger",
 url: "https://github.com/wjp/idados",
 src: "c++",
 cats: "debug",
 last: "20160228",
 vers: "6.9",
 desc: "Eric Fry's IDA/DOSBox debugger plugin"},

{name: "dp701",
 url: "https://github.com/pr701/dp701",
 cats: "ui",
 last: "20230104",
 vers: "7.3",
 desc: "Dark theme for IDA Pro."},

{name: "Dracula",
 url: "https://github.com/dracula/ida",
 cats: "ui",
 last: "20220630",
 desc: "Dark theme for IDA Pro."},

{name: "Dragodis",
 url: "https://github.com/dod-cyber-crime-center/Dragodis",
 src: "py",
 cats: "dev, int",
 last: "20231129",
 vers: "7.0",
 desc: "Python framework which allows for the creation of universal disassembler scripts. Supports IDA and Ghidra."},

{name: "DrGadget",
 url: "https://github.com/patois/DrGadget",
 src: "py",
 last: "20170202",
 desc: "This is an IDAPython plugin for the Interactive Disassembler for all your ROP experimentation needs."},

{name: "DriverBuddy",
 url: "https://github.com/nccgroup/DriverBuddy",
 src: "py",
 last: "20181122",
 desc: "DriverBuddy is an IDA Python script to assist with the reverse engineering of Windows kernel drivers."},

{name: "DriverBuddyReloaded",
 url: "https://github.com/VoidSec/DriverBuddyReloaded",
 src: "py",
 last: "20230523",
 desc: "Driver Buddy Reloaded is an IDA Pro Python plugin that helps automate some tedious Windows Kernel Drivers reverse engineering tasks."},

{name: "Drop",
 url: "https://github.com/Riscure/DROP-IDA-plugin",
 src: "py",
 last: "20171222",
 vers: "6.95",
 desc: "An experimental IDA Pro plugin capable of detecting several types of opaque predicates in obfuscated binaries. It leverages the power of the symbolic execution engine angr and its components to reason about the opaqueness of predicates based on their symbolic context."},

{name: "dsync",
 url: "https://github.com/patois/dsync",
 src: "py",
 cats: "decomp",
 last: "20210120",
 vers: "7.3",
 desc: "IDAPython plugin that synchronizes decompiled and disassembled code views."},

{name: "dubRE",
 url: "https://github.com/michal-kapala/dubRE",
 src: "py",
 last: "20230905",
 vers: "7.0",
 desc: "ML-driven function symbol extraction plugin for IDA Pro."},

{name: "dumpDyn",
 url: "https://github.com/secrary/IDA-scripts/tree/master/dumpDyn",
 src: "py",
 last: "20190226",
 desc: "Script which saves comments, names, breakpoints, functions from one execution to another, f a process allocates a dynamic memory using VirtualAlloc, HeapAlloc, new, etc. and continues execution from that address."},

{name: "dwarfexport",
 url: "https://github.com/ALSchwalm/dwarfexport",
 src: "c++",
 last: "20201118",
 vers: "7.2",
 desc: "dwarfexport is an IDA Pro plugin that allows the user to export dwarf debug information. This can then be imported in to gdb and other tools, allowing you to debug using info you have recovered in IDA even when you cannot connect the IDA debugger."},

{name: "DWARF Plugin",
 url: "https://github.com/vrasneur/idadwarf",
 src: "c++",
 last: "20091115",
 vers: "5.5",
 desc: "IDADWARF is an IDA plugin that imports DWARF debugging symbols into an IDA database. [Download](https://hex-rays.com/contests/2009/IDADwarf-0.2/idadwarf-0.2.zip)"},

{name: "Dynamic Data Resolver",
 url: "https://github.com/Cisco-Talos/DynDataResolver",
 src: "py",
 cats: "trace",
 last: "20201217",
 vers: "7.5",
 desc: "A plugin for IDA that aims to make the reverse-engineering of malware easier. Features: Code Flow Trace, Searchable API call logging, Searchable string logging, Resolving dynamic values and auto-commenting."},

{name: "Dynamic IDA Enrichment",
 url: "https://github.com/ynvb/DIE",
 src: "py",
 cats: "debug, trace",
 last: "20210513",
 vers: "7.2",
 desc: "DIE is an IDA python plugin designed to enrich IDA`s static analysis with dynamic data. This is done using the IDA Debugger API, by placing breakpoints in key locations and saving the current system context once those breakpoints are hit."},

{name: "Dynapstalker",
 url: "https://github.com/joswr1ght/dynapstalker",
 src: "py",
 cats: "int, ui",
 last: "20221124",
 vers: "7.0",
 desc: "Colorize Reached Blocks in IDA Pro using DynamoRIO drcov Output."},

{name: "Dynlib",
 url: "https://github.com/aerosoul94/dynlib",
 src: "c++",
 last: "20171216",
 vers: "7.0",
 desc: "This is an IDA Pro plugin to aid in reverse engineering PS4 user mode elf's by loading the PS4 specific DYNLIBDATA segment."},

{name: "EasyRE",
 url: "https://github.com/AntoineBlaud/EasyRe",
 src: "py",
 cats: "trace",
 last: "20240305",
 desc: "Plugin to make your RE life easier. Trace execution and save code/memory for detailed exploration."},

{name: "E-Decompiler",
 url: "https://github.com/fjqisba/E-Decompiler",
 src: "c++",
 cats: "decomp",
 last: "20220905",
 vers: "7.5",
 desc: "IDA 7.5 plug-in used to assist in the analysis of decompiled programs, experimental project (Chinese)."},

{name: "EFI Scripts (efitools)",
 url: "https://github.com/danse-macabre/ida-efitools",
 src: "py",
 last: "20150713",
 desc: "Some IDA scripts and tools to assist with reverse engineering EFI executables."},

{name: "EFI Scripts (efitools2)",
 url: "https://github.com/p-state/ida-efitools2",
 src: "py",
 last: "20201019",
 desc: "Plugin for extending UEFI reverse engineering capabilities. Based on ida-efitools (EFI Scripts) with a bunch of fixes and new features."},

{name: "EFI Scripts (efiutils)",
 url: "https://github.com/snare/ida-efiutils",
 src: "py",
 cats: "loader",
 last: "20140617",
 vers: "6.3",
 desc: "Some IDA scripts to assist with reverse engineering EFI executables."},

{name: "EFI Swiss Knife",
 url: "https://github.com/gdbinit/EFISwissKnife",
 src: "c++",
 last: "20170613",
 vers: "6.95",
 desc: "An IDA plugin to improve (U)EFI reversing."},

{name: "efiXplorer",
 url: "https://github.com/binarly-io/efiXplorer",
 src: "c++",
 last: "20240423",
 vers: "7.7",
 desc: "IDA plugin for UEFI firmware analysis and reverse engineering automation."},

{name: "Eject IDB",
 url: "https://github.com/allthingsida/eject_idb",
 src: "c++",
 last: "20240511",
 desc: "Eject_idb is a last ditch effort to flush and save your IDB when IDA hangs or a plugin causes an exception, etc."},

{name: "ElfDumper",
 url: "https://github.com/WPeace-HcH/ElfDumper",
 src: "py",
 last: "20230403",
 vers: "7.4",
 desc: "A plugin for IDA that can dump the ELF file easily."},

{name: "EmuIt",
 url: "https://github.com/AzzOnFire/emuit",
 src: "py",
 last: "20240320",
 desc: "Easy-to-use IDA plugin for code emulation."},

{name: "Enhanced PDB Plugin",
 url: "https://github.com/sonyps5201314/pdb",
 src: "c++",
 last: "20240227",
 vers: "8.0",
 desc: "IDA PDB plugin with enhancements and bugfixes (Chinese)."},

{name: "epanos",
 url: "https://github.com/drvink/epanos",
 src: "py",
 cats: "decomp",
 last: "20140505",
 vers: "6.6",
 desc: "ElectroPaint Automatic No-source Object reaSsembler (a MIPS to C decompiler). This is a very dumb MIPS to C static translator."},

{name: "EtherAnnotate",
 url: "https://github.com/inositle/etherannotate_ida",
 src: "c++",
 cats: "trace",
 last: "20100504",
 desc: "Parses the specialized instruction trace files that are generated using the EtherAnnotate Xen modification (https://github.com/inositle/etherannotate_xen).  From the instruction trace, register values and code coverage of the run-time information are visualized in IDA Pro through instruction comments and line colorations."},

{name: "EtherAnnotate IDA Plugin",
 url: "https://github.com/jeads-sec/etherannotate_ida",
 src: "py",
 cats: "int, trace",
 last: "20100504",
 desc: "Parse EtherAnnotate trace files and markup IDA disassemblies with runtime values."},

{name: "etm_displayer",
 url: "https://github.com/honeybadger1613/etm_displayer",
 src: "py",
 cats: "int, trace",
 last: "20180904",
 vers: "7.0",
 desc: "Display the result of perf Coresight ETM tracing."},

{name: "etwbreaker",
 url: "https://github.com/airbus-cert/etwbreaker",
 src: "py",
 cats: "debug",
 last: "20220708",
 vers: "7.4",
 desc: "Deal with Event Tracing for Windows (ETW). Statically find ETW events in a PE file and generate a Conditional Breakpoint to facilitate Security Research."},

{name: "EWS",
 url: "https://github.com/deadeert/EWS",
 src: "py",
 cats: "debug, int",
 last: "20230525",
 desc: "Emulation Wrapper Solution is a IDA Pro plugin that brings emulator to provide features such as debugging an mocking."},

{name: "ExportQml",
 url: "https://github.com/Redbeanw44602/ExportQml",
 src: "py",
 last: "20220910",
 desc: "Export all Qml from the Qt program. (IDA script)."},

{name: "Exports+",
 url: "https://github.com/ax330d/exports-plus",
 src: "py",
 last: "20180921",
 desc: "View Exports. The problem is that IDA for some reason sometimes does not show certain names in Exports or does not demangle them. This plugin fixes this problem."},

{name: "export_source_path",
 url: "https://github.com/Humenger/export_source_path",
 src: "py",
 last: "20230106",
 desc: "Export source path to dir for IDA plugin."},

{name: "Extract.Hvcall",
 url: "https://github.com/gerhart01/Hyper-V-Tools/tree/main/Extract.Hvcalls",
 src: "c#",
 cats: "int",
 last: "20240506",
 desc: "Utility for automatically extracting Hyper-V hypercalls names and codes from Hyper-V core binaries."},

{name: "Extract Macho-O",
 url: "https://github.com/gdbinit/ExtractMachO",
 src: "c++",
 last: "20190509",
 vers: "6.3",
 desc: "This is a very simple IDA plugin to extract all Mach-O binaries contained anywhere in the disassembly."},

{name: "FA",
 url: "https://github.com/doronz88/fa",
 src: "py",
 last: "20220426",
 vers: "7.0",
 desc: "FA stands for Firmware Analysis and intended For Humans. FA allows one to easily perform code exploration, symbol searching and other functionality with ease."},

{name: "FakePDB",
 url: "https://github.com/Mixaill/FakePDB",
 src: "py",
 last: "20230502",
 vers: "7.4",
 desc: "Tool for PDB generation from IDA Pro database."},

{name: "FCatalog",
 url: "https://github.com/xorpd/fcatalog_client",
 src: "py",
 last: "20160819",
 desc: "FCatalog (The functions catalog) is a mechanism for finding similarities between different binary blobs in an efficient manner. It is mostly useful for identifying a new binary blob is somewhat similar to a binary blob that have been encountered before. The client side of FCatalog is an IDA plugin that allows a group of reverse engineers to manage a pool of reversed functions. Whenever a new binary function is encountered, FCatalog can compare it to all the known and previously reversed binary functions."},

{name: "Fentanyl",
 url: "https://github.com/osirislab/Fentanyl",
 src: "py",
 last: "20221012",
 vers: "7.0",
 desc: "IDAPython script that makes patching significantly easier."},

{name: "FindCrypt2",
 url: "https://hex-rays.com/blog/findcrypt2/",
 src: "c++",
 last: "20060130",
 vers: "4.9",
 desc: "Search for constants known to be associated with cryptographic algorithms."},

{name: "Findcrypt-yara",
 url: "https://github.com/polymorf/findcrypt-yara",
 src: "py",
 last: "20240421",
 vers: "7.4",
 desc: "IDA pro plugin to find crypto constants (and more)"},

{name: "FindFunc",
 url: "https://github.com/FelixBer/FindFunc",
 src: "py",
 last: "20221025",
 vers: "7.7",
 desc: "Advanced Filtering/Finding of Functions. FindFunc is an IDA PRO plugin to find code functions that contain a certain assembly or byte pattern, reference a certain name or string, or conform to various other constraints."},

{name: "findrpc",
 url: "https://github.com/lucasg/findrpc",
 src: "py",
 last: "20220125",
 vers: "7.7",
 desc: "Ida script to extract RPC interface from binaries."},

{name: "FindYara",
 url: "https://github.com/OALabs/findyara-ida",
 src: "py",
 last: "20211228",
 vers: "7.0",
 desc: "IDA python plugin to scan binary with Yara rules."},

{name: "Finger",
 url: "https://github.com/aliyunav/Finger",
 src: "py",
 last: "20211014",
 vers: "7.0",
 desc: "Function symbol recognition engine for binary programs, which aims to help security researchers identify unknown library functions in a given binary file.."},

{name: "FingerMatch",
 url: "https://github.com/jendabenda/fingermatch",
 src: "py",
 last: "20201230",
 vers: "7.4",
 desc: "IDA plugin for collecting functions, data, types and comments from analysed binaries and fuzzy matching them in another binaries."},

{name: "Firmeye",
 url: "https://github.com/VulnTotal-Team/firmeye",
 src: "py",
 last: "20221111",
 desc: "Find holes in IoT firmware (chinese)."},

{name: "FirmLoader",
 url: "https://github.com/Accenture/FirmLoader",
 src: "py",
 cats: "loader",
 last: "20240206",
 desc: "Automatically identify parts of memory for firmware images extracted from microcontrollers. Alternative to SVD loader that uses simpler JSON files."},

{name: "FIRST",
 url: "https://github.com/Cisco-Talos/FIRST-plugin-ida",
 src: "py",
 last: "20230503",
 vers: "7.3",
 desc: "Function Identification and Recovery Signature Tool (FIRST) is a plugin for IDA Pro that allows users to automatically search for and apply function metadata (the function name, parameter names, parameter types, comments, etc.) submitted from different IDBs / users. This functionality is similar to IDA's Lumina feature, which was introduced in IDA 7.2, although with FIRST the function metadata server address is configurable and the FIRST server code is open source, which means the user can set up a private metadata server for internal use if desired. A community database is also maintained by Cisco Talos and available to use free-of-charge. FIRST supports IDA 6.9 SP1 and above."},

{name: "flare-emu",
 url: "https://github.com/fireeye/flare-emu",
 src: "py",
 last: "20230220",
 desc: "flare-emu marries a supported binary analysis framework, such as IDA Pro or Radare2, with Unicorn’s emulation framework to provide the user with an easy to use and flexible interface for scripting emulation tasks. It is designed to handle all the housekeeping of setting up a flexible and robust emulator for its supported architectures so that you can focus on solving your code analysis problems. Currently, flare-emu supports the x86, x86_64, ARM, and ARM64 architectures."},

{name: "FLARE IDA Decompiler Library (FIDL)",
 url: "https://github.com/fireeye/FIDL",
 src: "py",
 last: "20220208",
 vers: "7.4",
 desc: "A sane API for IDA Pro's decompiler."},

{name: "FLARE Plugins",
 url: "https://github.com/mandiant/flare-ida",
 src: "py",
 last: "20240301",
 desc: "FLARE Team Reversing Repository plugin collection: Shellcode Hashes, Struct Typer, StackStrings, MSDN Annotations, ApplyCalleeType, idb2pat, argtracker, objc2_analyzer, ironstrings, Code Grafter"},

{name: "FLIRTDB",
 url: "https://github.com/Maktm/FLIRTDB",
 cats: "int",
 last: "20200523",
 desc: "A community driven collection of IDA FLIRT signature files."},

{name: "FLS Loader",
 url: "https://github.com/rpw/flsloader",
 src: "py",
 cats: "loader",
 last: "20120419",
 vers: "6.2",
 desc: "IDA Pro loader module for IFX iPhone baseband firmwares. Based on a universal scatter loader script by roxfan."},

{name: "Fluorescence",
 url: "https://github.com/devttys0/ida/tree/master/plugins/fluorescence",
 src: "py",
 last: "20210602",
 vers: "7.4",
 desc: "Un/highlights function call instructions"},

{name: "FRAPL",
 url: "https://github.com/FriedAppleTeam/FRAPL",
 src: "py",
 cats: "int",
 last: "20161226",
 vers: "6.95",
 desc: "FRAPL is a reverse engineering framework created to simplify dynamic instrumentation with Frida."},

{name: "Free the debuggers",
 url: "https://github.com/techbliss/Free_the_Debuggers",
 src: "py",
 cats: "debug",
 last: "20150207",
 vers: "6.7",
 desc: "Free the ida pro debuggers for all files."},

{name: "Frida",
 url: "https://github.com/techbliss/Frida_For_Ida_Pro",
 src: "py",
 cats: "int",
 last: "20150405",
 vers: "6.7",
 desc: "This is plugin for ida pro thar uses the Frida api. Mainly trace functions."},

{name: "FRIEND",
 url: "https://github.com/alexhude/FRIEND",
 src: "c++",
 last: "20220927",
 vers: "7.0",
 desc: "Flexible Register/Instruction Extender aNd Documentation. FRIEND is an IDA plugin created to improve disassembly and bring register/instruction documentation right into IDA View. (see also: AMIE)"},

{name: "Fugue FDB IDB exporter",
 url: "https://github.com/fugue-re/fugue-idapro",
 src: "c++",
 cats: "int",
 last: "20230602",
 vers: "7.5",
 desc: "Fugue database importer and exporter for IDA Pro."},

{name: "Funcap",
 url: "https://github.com/deresz/funcap",
 src: "py",
 cats: "trace",
 last: "20220905",
 vers: "7.0",
 desc: "This script records function calls (and returns) across an executable using IDA debugger API, along with all the arguments passed. It dumps the info to a text file, and also inserts it into IDA's inline comments. This way, static analysis that usually follows the behavioral runtime analysis when analyzing malware, can be directly fed with runtime info such as decrypted strings returned in function's arguments."},

{name: "FuncScanner",
 url: "https://github.com/patois/FuncScanner",
 src: "py",
 last: "20201206",
 vers: "7.3",
 desc: "Collects extended function properties from IDA Pro databases. This is especially useful in reverse engineering code that comes with no or little symbolic information, as is often the case with embedded firmware."},

{name: "FunctionInliner",
 url: "https://github.com/cellebrite-labs/FunctionInliner",
 src: "py",
 last: "20220509",
 vers: "7.6",
 desc: "An IDA plugin that eases reversing of binaries that have been code-size-optimized with function outlining."},

{name: "Functions+",
 url: "https://github.com/ax330d/functions-plus",
 src: "py",
 last: "20210417",
 vers: "7.5",
 desc: "IDA Pro plugin to make functions tree view. Plugin parses function names and groups them by namespaces."},

{name: "Function Tagger",
 url: "https://github.com/alessandrogario/IDA-Function-Tagger",
 src: "py",
 last: "20210526",
 vers: "7.6",
 desc: "This IDAPython script tags subroutines according to their use of imported functions"},

{name: "FunctionTrapperKeeper",
 url: "https://github.com/alexander-hanel/FunctionTrapperKeeper",
 src: "py",
 last: "20230304",
 desc: "Plugin for writing and storing notes related to functions. Text is entered in the Editor window and displayed in the Preview window."},

{name: "Funkbuster",
 url: "https://github.com/ep1h/funkbuster-ida-plugin",
 src: "py",
 last: "20231106",
 vers: "7.7",
 desc: "IDA plugin for analyzing, filtering and tracing functions and call flows."},

{name: "Gamecube DSP",
 url: "https://github.com/dolphin-emu/gcdsp-ida",
 src: "py",
 cats: "proc",
 last: "20141213",
 vers: "6.9",
 desc: "This project adds support for the DSP present in the Gamecube and the Wii to IDA, the Interactive Disassembler [1]. This allows easy analyze of a DSP ucode, handling cross-references, control flow, and so on."},

{name: "Gamecube Extension",
 url: "https://github.com/hyperiris/gekkoPS",
 src: "c++",
 last: "20180425",
 vers: "5.2",
 desc: "This is a Gekko CPU Paired Single extension instructions plug-in for IDA Pro 5.2"},

{name: "GameCube REL Loader",
 url: "https://github.com/oct0xor/ida_pro_gamecube_rel_loader",
 src: "py",
 cats: "loader",
 last: "20220610",
 desc: "IDA Pro loader for Nintendo GameCube's .rel files. Based on rso_ida_loader."},

{name: "Gamma",
 url: "https://github.com/neoni/gamma",
 src: "py",
 cats: "decomp",
 last: "20200731",
 vers: "7.2",
 desc: "IDA Hexrays plugin for highlighting your interesting variables or struct members."},

{name: "GandCrab String Decryptor",
 url: "https://github.com/lacike/gandcrab_string_decryptor",
 src: "idc",
 last: "20190424",
 desc: "IDC script for decrypting strings in the GandCrab v5.1-5.3"},

{name: "garmin-ida-loader",
 url: "https://sourceforge.net/projects/garminidaloader/",
 src: "c++",
 cats: "loader",
 last: "20130530",
 desc: "IDA loader for Garmin firmwares."},

{name: "gdbida",
 url: "https://github.com/comsecuris/gdbida",
 src: "py",
 cats: "debug",
 last: "20180423",
 vers: "6.95",
 desc: "A visual bridge between a GDB session and IDA Pro's disassembler"},

{name: "genmc",
 url: "https://github.com/patois/genmc",
 src: "py",
 cats: "dev",
 last: "20221113",
 vers: "7.3",
 desc: "Genmc is an IDAPython script/plugin hybrid that displays Hexrays decompiler microcode, which can help in developing microcode plugins."},

{name: "genpatch",
 url: "https://github.com/sterrasec/genpatch",
 src: "py",
 last: "20231221",
 vers: "7.4",
 desc: "Plugin that generates a python script for patching binary from Patched Byte on IDA."},

{name: "Geolocator",
 url: "https://github.com/techbliss/ida_pro_http_ip_geolocator",
 src: "py",
 cats: "int",
 last: "20190310",
 vers: "7.0",
 desc: "Lookup (geolocate) IP's and http/https addresses, using google maps, and MaxMind databases."},

{name: "Gepetto",
 url: "https://github.com/JusticeRage/Gepetto",
 src: "py",
 cats: "decomp, int",
 last: "20240424",
 vers: "7.7",
 desc: "Query OpenAI's davinci-003 language model to speed up reverse-engineering."},

{name: "Gepetto-ChatGPT",
 url: "https://github.com/burpheart/Gepetto-ChatGPT",
 src: "py",
 cats: "int",
 last: "20221208",
 vers: "7.5",
 desc: "IDA plugin which queries OpenAI's ChatGPT model to speed up reverse-engineering (based on JusticeRage/Gepetto) (Chinese)."},

{name: "GhIDA",
 url: "https://github.com/Cisco-Talos/GhIDA",
 src: "py",
 cats: "decomp, int",
 last: "20201216",
 vers: "7.4",
 desc: "GhIDA is an IDA Pro plugin that integrates the Ghidra decompiler in IDA."},

{name: "GhidraDec",
 url: "https://github.com/GregoryMorse/GhidraDec",
 src: "c++",
 cats: "decomp, int",
 last: "20240516",
 vers: "7.7",
 desc: "Ghidra Decompiler Plugin for IDA Pro."},

{name: "GoFastAnalyzer",
 url: "https://github.com/harelon/GoFastAnalyzer",
 src: "py",
 cats: "decomp",
 last: "20240513",
 vers: "7.0",
 desc: "Go fastcall analysis for ida decompiler."},

{name: "golang_loader_assist",
 url: "https://github.com/strazzere/golang_loader_assist",
 src: "py",
 last: "20200622",
 vers: "7.5",
 desc: "Making GO reversing easier in IDA Pro."},

{name: "golang_struct_builder",
 url: "https://github.com/spigwitmer/golang_struct_builder",
 src: "py",
 last: "20210822",
 vers: "7.6",
 desc: "Script that auto-generates structs and interfaces from runtime metadata found in golang binaries."},

{name: "go_parser",
 url: "https://github.com/0xjiayu/go_parser",
 src: "py",
 last: "20240112",
 desc: "Yet Another Golang binary parser for IDAPro. Inspired by golang_loader_assist and jeb-golang-analyzer, I wrote a more complete Go binaries parsing tool for IDAPro."},

{name: "grap",
 url: "https://github.com/QuoSecGmbH/grap",
 src: "py",
 last: "20220505",
 vers: "7.1",
 desc: "Define and match graph patterns within binaries. grap takes patterns and binary files, uses a Casptone-based disassembler to obtain the control flow graphs from the binaries, then matches the patterns against them."},

{name: "GraphGrabber",
 url: "https://github.com/tmr232/GraphGrabber",
 src: "py",
 last: "20231123",
 vers: "7.0",
 desc: "Grab full-resolution images of IDA graphs."},

{name: "Graph Slick",
 url: "https://github.com/lallousx86/GraphSlick",
 src: "c++",
 last: "20141120",
 desc: "Automated detection of inlined functions. It highlights similar groups of nodes and allows you to group them, simplifying complex functions. The authors provide an accompanying presentation which explains the algorithms behind the plugin and shows sample use cases."},

{name: "GUID-Finder",
 url: "https://github.com/nihilus/guid-finder",
 src: "py",
 last: "20160124",
 vers: "6.8",
 desc: "Find GUID/UUIDs. The COM side of RE'ing (at least with \"dead listing\") can be pretty elusive. With this you can at least partially glean what interfaces and classes a target is using."},

{name: "HashDB IDA",
 url: "https://github.com/OALabs/hashdb-ida",
 src: "py",
 cats: "int",
 last: "20221212",
 vers: "7.0",
 desc: "Malware string hash lookup plugin for IDA Pro. This plugin connects to the OALABS HashDB Lookup Service."},

{name: "HeapViewer",
 url: "https://github.com/danigargu/heap-viewer",
 src: "py",
 last: "20220725",
 vers: "7.4",
 desc: "An IDA Pro plugin to examine the heap, focused on exploit development."},

{name: "heimdallr-ida",
 url: "https://github.com/interruptlabs/heimdallr-ida",
 src: "py",
 cats: "int",
 last: "20231018",
 desc: "Plugin to enable linking to locations in an IDB with a ida:// URI (using the Heimdallr client)."},

{name: "herast",
 url: "https://github.com/Mizari/herast",
 src: "py",
 cats: "decomp, dev",
 last: "20240403",
 vers: "7.4",
 desc: "Framework to automate working with AST in IDA Pro."},

{name: "Hexagon Processor Module",
 url: "https://github.com/n-o-o-n/idp_hexagon",
 src: "c++",
 cats: "proc",
 last: "20230911",
 vers: "7.7",
 desc: "Hexagon (aka QDSP6) processor module for IDA Pro disassembler."},

{name: "HexCopy",
 url: "https://github.com/OALabs/hexcopy-ida",
 src: "py",
 last: "20211011",
 vers: "7.0",
 desc: "IDA plugin for quickly copying disassembly as encoded hex bytes."},

{name: "HexExt",
 url: "https://github.com/chrisps/Hexext",
 src: "c++",
 cats: "decomp",
 last: "20190804",
 vers: "7.0",
 desc: "Improve the output of the hexrays decompiler through microcode manipulation."},

{name: "Hexext",
 url: "https://github.com/disjtqz/Hexext",
 src: "c++",
 cats: "decomp",
 last: "20190804",
 vers: "7.0",
 desc: "An old Hexrays plugin for IDA 7.0 that backported the microcode API. Manipulate the internal IR of the Hexrays decompiler with the aim of improving code generation."},

{name: "Hex-Rays Block Highlighter",
 url: "https://github.com/vmallet/ida-hex-highlighter",
 src: "py",
 cats: "decomp, ui",
 last: "20220417",
 vers: "7.5",
 desc: "Highlight code blocks in the Hex-Rays decompiler output. In some cases the decompilation output can be quite hairy with lots of nested blocks and it can be hard to follow where one ends and the other begins. This plugin will highlight blocks in a sticky way, allowing one to navigate within the window while keeping the block highlight around."},

{name: "HexRays CodeXplorer",
 url: "https://github.com/REhints/HexRaysCodeXplorer",
 src: "c++",
 cats: "decomp",
 last: "20231004",
 vers: "7.7",
 desc: "The Hex-Rays Decompiler plugin for better code navigation in RE process. CodeXplorer automates code REconstruction of C++ applications or modern malware like Stuxnet, Flame, Equation, Animal Farm ..."},

{name: "HexRaysDeob",
 url: "https://github.com/RolfRolles/HexRaysDeob",
 src: "c++",
 cats: "deobf",
 last: "20190827",
 vers: "7.3",
 desc: "A Hex-Rays microcode API plugin breaking an obfuscating compiler used to create an in-the-wild malware family. The plugin is fully automatic and requires no user intervention; upon installation, the decompilation listings presented to the user will be free of obfuscation."},

{name: "hexrays_hlight3",
 url: "https://github.com/p1ay8y3ar/hexrays_hlight3",
 src: "py",
 cats: "decomp",
 last: "20220210",
 vers: "7.6",
 desc: "Port of HexLight (by Milan Bohacek) to Python 3: highlight matching curly brace in the pseudocode view and let/ you jump from one brace to the other."},

{name: "hexraysIDAplus",
 url: "https://github.com/Byzero512/hexraysIDAplus",
 src: "c++",
 cats: "decomp",
 last: "20211126",
 vers: "7.5",
 desc: "Fold decompiled code."},

{name: "HexRaysPyTools",
 url: "https://github.com/igogo-x86/HexRaysPyTools",
 src: "py",
 cats: "decomp",
 last: "20200215",
 vers: "7.4",
 desc: "Plugin assists in creation classes/structures and detection virtual tables. Best to use with Class Informer plugin, because it helps to automatically get original classes names."},

{name: "hexrays_scripts",
 url: "https://github.com/patois/hexrays_scripts",
 src: "py",
 last: "20230722",
 desc: "Various scripts for the Hexrays decompiler (kloppy, shuffle, arachno, IDA coffee, screenrecorder, ricky)."},

{name: "Hexrays Toolbox",
 url: "https://github.com/patois/HexraysToolbox",
 src: "py",
 cats: "decomp",
 last: "20230620",
 vers: "7.4",
 desc: "Find code patterns within the Hexrays AST"},

{name: "HexRays Tools",
 url: "https://github.com/nihilus/hexrays_tools",
 src: "py",
 cats: "decomp, dev",
 last: "20160126",
 vers: "7.4",
 desc: "* Assist in creation of new structure definitions / virtual calls detection\n* Jump directly to virtual function or structure member definition\n* Gives list of structures with given size, with given offset\n* Finds structures with same \"shape\" as is used.\n* convert function to __usercall or __userpurge\n* and more...."},

{name: "hexviewjump",
 url: "https://github.com/anic/hexviewjump",
 src: "py",
 last: "20190227",
 vers: "7.0",
 desc: "IDA 7.0 plugins that helps to jump at hexview and extends JumpAsk expression."},

{name: "HightLight",
 url: "https://github.com/RevSpBird/HightLight",
 src: "c++",
 cats: "decomp, ui",
 last: "20190826",
 vers: "7.2",
 desc: "A plugin for ida of version 7.2 to help know F5 window codes better."},

{name: "HRDEV",
 url: "https://github.com/ax330d/hrdev",
 src: "py",
 cats: "decomp",
 last: "20180921",
 vers: "6.6",
 desc: "This is an IDA Pro Python plugin to make Hex-Rays Decompiler output bit more attractive. HRDEV plugin retrieves standard decompiler output, parses it with Python Clang bindings, does some magic, and puts back."},

{name: "HrDevHelper",
 url: "https://github.com/patois/HRDevHelper",
 src: "py",
 cats: "decomp, dev",
 last: "20230412",
 vers: "7.3",
 desc: "HexRays decompiler plugin that visualizes the ctree of decompiled functions using IDA's graph engine."},

{name: "Hyara",
 url: "https://github.com/hyuunnn/Hyara",
 src: "py",
 last: "20240313",
 desc: "A plugin to create pattern-matching rules. It helps creating rules for the YARA pattern-matching tool directly in IDA. It includes a simple detection of relocatable bytes in x86 opcodes for improved matching. It also provides a checker feature for testing the rules on the loaded binary."},

{name: "iBoot64helper",
 url: "https://github.com/argp/iBoot64helper",
 src: "py",
 cats: "loader",
 last: "20220221",
 vers: "7.7",
 desc: "IDAPython loader to help with AArch64 iBoot, iBEC, and SecureROM reverse engineering."},

{name: "IBT",
 url: "https://github.com/pwnslinger/IBT",
 src: "py",
 last: "20170501",
 vers: "6.95",
 desc: "IDA Pro Back Tracer - Initial project toward automatic customized protocols structure extraction."},

{name: "IDA2Obj",
 url: "https://github.com/jhftss/IDA2Obj",
 src: "py",
 last: "20210924",
 vers: "7.0",
 desc: "IDA2Obj is a tool to implement SBI (Static Binary Instrumentation)."},

{name: "ida2pwntools",
 url: "https://github.com/anic/ida2pwntools",
 src: "py",
 cats: "debug, int",
 last: "20230329",
 vers: "7.0",
 desc: "IDA 7.0 plugins that helps to attach process created by pwntools and debug pwn."},

{name: "IDA2SQL",
 url: "https://github.com/zynamics/ida2sql-plugin-ida",
 src: "py",
 cats: "int",
 last: "20120110",
 vers: "5.7",
 desc: "As the name implies this plugin can be used to export information from IDA databases to SQL databases. This allows for further analysis of the collected data: statistical analysis, building graphs, finding similarities between programs, etc."},

{name: "IDA 7.x VS2017 Sample Project",
 url: "https://github.com/patois/ida_vs2017",
 src: "c++",
 cats: "dev",
 last: "20180510",
 vers: "7.0",
 desc: "This is a sample Visual Studio 2017 (Community Edition) project for IDA 7.x plugins on Windows."},

{name: "IDA7-SegmentSelect",
 url: "https://github.com/rcx/IDA7-SegmentSelect",
 src: "c++",
 last: "20180108",
 vers: "7.0",
 desc: "IDA-SegmentSelect library by sirmabus, ported to IDA 7: A memory segment dialog to allow user to select one or more for processing."},

{name: "ida-arm-system-highlight",
 url: "https://github.com/gdelugre/ida-arm-system-highlight",
 src: "py",
 last: "20210928",
 vers: "7.4",
 desc: "This script will give you the list of ARM system instructions used in your IDA database. This is useful for locating specific low-level pieces of code (setting up the MMU, caches, fault handlers, etc.)."},

{name: "IDA-Assistant",
 url: "https://github.com/stuxnet147/IDA-Assistant",
 src: "py",
 cats: "int",
 last: "20240315",
 desc: "IDA plugin to support automatic reverse engineering (using Claude-3 AI)."},

{name: "IDA Autoruns",
 url: "https://github.com/tmr232/ida-autoruns",
 src: "py",
 last: "20240227",
 vers: "6.8",
 desc: "IDA-Autoruns is a simple plugin to make a script run automatically every time you open a specific IDB."},

{name: "IDA Batch Decompile",
 url: "https://github.com/tintinweb/ida-batch_decompile",
 src: "py",
 cats: "decomp",
 last: "20180712",
 vers: "7.0",
 desc: "Batch decompile multiple files and their imports with additional annotations (xref, stack var size) to a pseudocode .c file."},

{name: "IDABB",
 url: "https://github.com/HumanGamer/IDABB",
 src: "py",
 cats: "loader",
 last: "20230213",
 desc: "Loader for Blitz3D BlitzBasic Code (*.bbc)."},

{name: "ida bitfields",
 url: "https://github.com/JustasMasiulis/ida_bitfields",
 src: "c++",
 cats: "decomp",
 last: "20240406",
 desc: "A simple IDA Pro plugin to make bitfields and bitflags in them easier to reason about."},

{name: "ida_bochs_windows",
 url: "https://github.com/therealdreg/ida_bochs_windows",
 src: "py",
 last: "20230811",
 vers: "7.4",
 desc: "Helper script for Windows kernel debugging with IDA Pro on native Bochs debugger (including PDB symbols)."},

{name: "IDA BPF Processor",
 url: "https://github.com/bnbdr/ida-bpf-processor",
 src: "py",
 last: "20180827",
 vers: "7.0",
 desc: "BPF Bytecode Processor for IDA (python). Supports the old BPF bytecode only (no eBPF)."},

{name: "IDABuddy",
 url: "https://github.com/tmr232/IDABuddy",
 src: "py",
 last: "20170917",
 vers: "6.9",
 desc: "IDABuddy is a reverse-engineer's best friend. Designed to be everything Clippy the Office Assistant was, and more!"},

{name: "IDA C#",
 url: "https://blog.karatos.in/a?ID=01000-69f2f124-560e-47a5-bb0c-93052d9763af",
 cats: "dev",
 last: "20100605",
 desc: "Scripting IDA with C#, download [here](https://files.cnblogs.com/nnhy/IDACSharp_20100605143116.rar). (All in Chinese)."},

{name: "IDAChristmas",
 url: "https://github.com/eternalklaus/IDAChristmas",
 src: "py",
 cats: "ui",
 last: "20220315",
 desc: "IDA pro Christmas Plugin: coloring plugin brings christmas mood into IDA-View."},

{name: "IDA cLEMENCy Tools",
 url: "https://github.com/cseagle/ida_clemency",
 src: "py",
 cats: "loader, proc",
 last: "20170731",
 vers: "6.95",
 desc: "Tools to work with the cLEMENCy architecture developed by LegitBS for use during the Defcon 25 Capture the Flag event."},

{name: "ida-climacros",
 url: "https://github.com/0xeb/ida-climacros",
 src: "c++",
 last: "20230515",
 vers: "7.5",
 desc: "`ida-climacros` is a productivity plugin that allows you to define macros that will be expanded when interfacing with IDA's command line interpreter (in the output window)."},

{name: "IdaClu",
 url: "https://github.com/harlamism/IdaClu",
 src: "py",
 last: "20240319",
 vers: "8.2",
 desc: "Version-agnostic plugin for grouping similar functions. Pick an existing grouping algorithm or create your own."},

{name: "ida-cmake",
 url: "https://github.com/0xeb/ida-cmake",
 cats: "dev",
 last: "20240426",
 vers: "7.6",
 desc: "This is not an IDA plugin but a CMake project generator for IDA plugins development."},

{name: "ida-cmake",
 url: "https://github.com/zyantific/ida-cmake",
 cats: "dev",
 last: "20170902",
 vers: "7.0",
 desc: "CMake build scripts and a Python helper allowing compilation of C++ IDA plugins for Windows, macOS and Linux without much user effort."},

{name: "IDACode",
 url: "https://github.com/ioncodes/idacode",
 src: "py",
 cats: "dev, int",
 last: "20221227",
 vers: "7.5",
 desc: "An integration for IDA and VS Code which connects both to easily execute and debug IDAPython scripts."},

{name: "IDA Color Schemer",
 url: "https://github.com/tmr232/IDAColorSchemer",
 src: "py",
 cats: "ui",
 last: "20190105",
 vers: "7.2",
 desc: "tool to easily design IDA color schemes outside IDA. This will hopefully allow simplifying & automating the generation of color schemes and help create colorblind-friendly settings."},

{name: "ida-comment-view",
 url: "https://github.com/helloobaby/ida-comment-view",
 src: "c++",
 last: "20221101",
 vers: "7.5",
 desc: "A list of all the comments throughout the project in one convenient window (Chinese)."},

{name: "IDA Compare",
 url: "https://github.com/dzzie/IDACompare",
 src: "c++",
 last: "20190530",
 vers: "6.7",
 desc: "IDA disassembly level diffing tool, find patches and modifications between malware variants. Helps you line up functions across two separate disassemblies. See mydoom A/B sample database and video trainer for usage."},

{name: "idaConsonance",
 url: "https://github.com/eugeneching/ida-consonance",
 cats: "ui",
 last: "20130219",
 vers: "6.4",
 desc: "Consonance, a dark color scheme for IDA."},

{name: "IDACyber",
 url: "https://github.com/patois/IDACyber",
 src: "py",
 last: "20221206",
 vers: "7.4",
 desc: "IDACyber is a plugin that visualizes an IDA database's content."},

{name: "IDA Debug Bridge",
 url: "https://github.com/Byaidu/ida_debug_bridge",
 src: "c++",
 cats: "debug",
 last: "20211110",
 desc: "IDA Debugger Module to Dynamically Synchronize Memory and Registers with third-party Backends (Tenet, Unicorn, GDB, etc.)"},

{name: "IDADeflat",
 url: "https://github.com/za233/IDADeflat",
 src: "py",
 last: "20230825",
 desc: "Deflat plugin for ida pro (Chinese)."},

{name: "idadiff",
 url: "https://github.com/0x00ach/idadiff",
 src: "py",
 last: "20170517",
 desc: "IDAPython script to auto-rename subs using the MACHOC algorithm."},

{name: "IDADiscord",
 url: "https://github.com/bakablaze/IDADiscord",
 src: "c++",
 cats: "int",
 last: "20220822",
 vers: "7.6",
 desc: "Discord RPC plugin for IDA 7.x."},

{name: "IDA EA",
 url: "https://github.com/1111joe1111/ida_ea",
 src: "py",
 last: "20171128",
 vers: "7.0",
 desc: "A set of exploitation/reversing aids for IDA. Provides a context viewer, instruction emulator, heap explorer, trace dumper, GDB integration, Styling"},

{name: "IDA Embed arch disasm",
 url: "https://github.com/a1ext/ida-embed-arch-disasm",
 src: "py",
 last: "20211227",
 vers: "7.7",
 desc: "Allows you to disassemble x86-64 code (like inlined WOW64 one) while you using 32-bit IDA database. This would be helpfull to analyze WOW64 mode switches."},

{name: "ida-emotionengine",
 url: "https://github.com/oct0xor/ida-emotionengine",
 src: "py",
 last: "20220708",
 desc: "Plugin that implements disassembly of PlayStation 2 COP2 MIPS instructions."},

{name: "idaemu",
 url: "https://github.com/36hours/idaemu",
 src: "py",
 last: "20161215",
 vers: "6.9",
 desc: "Emulate code in IDA Pro. it is based on unicorn-engine."},

{name: "idaenv",
 url: "https://github.com/deactivated/idaenv",
 src: "py",
 cats: "int",
 last: "20230123",
 vers: "7.4",
 desc: "IDAPython Plugin Management. It is a plugin manager which bridges the gap between IDA Pro and the greater Python ecosystem of setuptools/virtualenv."},

{name: "IDA-EVM",
 url: "https://github.com/crytic/ida-evm",
 src: "py",
 cats: "proc",
 last: "20230629",
 vers: "7.0",
 desc: "IDA Processor Module for the Ethereum Virtual Machine (EVM)."},

{name: "ida-extends",
 url: "https://github.com/loyaltypollution/ida-extends",
 src: "py",
 cats: "dev",
 last: "20221216",
 desc: "An extension module for IDAPython API focused on ease of development."},

{name: "IDA Extrapass",
 url: "http://sourceforge.net/projects/idaextrapassplugin/",
 src: "c++",
 last: "20180713",
 vers: "7.1",
 desc: "An IDA Pro Win32 target clean up plug-in by Sirmabus. It does essentially four cleaning/fixing steps: Convert stray code section values to \"unknown\", fix missing \"align\" blocks, fix missing code bytes, and locate and fix missing/undefined functions."},

{name: "IDA Eye",
 url: "http://www.mfmokbel.com/Down/RCE/Documentation.html",
 src: "c++",
 last: "20180310",
 vers: "7.0",
 desc: "Plugin that enables you to perform different operations at the mnemonic level, independent of any particular processor type. These operations are facilitated through a parameterized template, which include the capabilities to de/highlight instructions, gather statistical information about the frequency of each instruction, and search for sequences of mnemonics, among other features."},

{name: "IDA Fit",
 url: "https://github.com/asef18766/IDAFit",
 src: "c++",
 cats: "int",
 last: "20240126",
 desc: "A ringcon-based IDA Pro controller for fitness lovers: manipulate IDA with ringcon & legging joycon."},

{name: "IDA-For-Delphi",
 url: "https://github.com/Coldzer0/IDA-For-Delphi",
 src: "py",
 last: "20221127",
 desc: "IDA Python Script to Get All function names from Event Constructor (VCL)."},

{name: "IDAFrida",
 url: "https://github.com/P4nda0s/IDAFrida",
 src: "py",
 cats: "int, trace",
 last: "20221218",
 desc: "IDA Frida Plugin for tracing something interesting. Plugin to generate FRIDA script."},

{name: "IDAFunctionsDecompiler",
 url: "https://github.com/JCGdev/IDAFunctionsDecompiler",
 src: "py",
 cats: "decomp",
 last: "20220913",
 desc: "An IDAPython script to decompile all the functions of an executable and dump the pseudocode."},

{name: "IDAFuzzy",
 url: "https://github.com/Ga-ryo/IDAFuzzy",
 src: "py",
 last: "20191216",
 vers: "7.4",
 desc: "IDAFuzzy is fuzzy searching tool for IDA Pro. This tool helps you to find command/function/struct and so on. (a la Mac Spotlight)."},

{name: "ida_game_elf_loaders (gel)",
 url: "https://github.com/aerosoul94/ida_gel",
 src: "c++",
 cats: "loader",
 last: "20191003",
 vers: "6.8",
 desc: "A collection of IDA loaders for various game console ELF's: PS3, PSVita, WiiU."},

{name: "IDA GCC RTTI",
 url: "https://github.com/mwl4/ida_gcc_rtti",
 src: "c++",
 last: "20180304",
 vers: "7.0",
 desc: "Class informer plugin for IDA which supports parsing GCC RTTI."},

{name: "ida-genesis",
 url: "https://github.com/zznop/ida-genesis",
 src: "py",
 cats: "loader",
 last: "20200216",
 desc: "Suite of IDA scripts for SEGA Genesis ROM hacking. ROM Loader, Branch Table Enumeration."},

{name: "ida-genpatch",
 url: "https://github.com/frasten/ida-genpatch",
 src: "py",
 cats: "int",
 last: "20231212",
 vers: "7.4",
 desc: "IDA Pro Plugin to automate patch generation for external tools."},

{name: "IDAGolangHelper",
 url: "https://github.com/sibears/idagolanghelper",
 src: "py",
 last: "20220729",
 vers: "7.4",
 desc: "Set of IDA Pro scripts for parsing GoLang types information stored in compiled binary."},

{name: "ida_gpt",
 url: "https://github.com/MayerDaniel/ida_gpt",
 src: "py",
 cats: "int",
 last: "20221204",
 desc: "Basic idapython script to get you started with analyzing disassembly with GPT (OpenAI)."},

{name: "IdaGrabStrings",
 url: "https://github.com/andreafioraldi/IdaGrabStrings",
 src: "py",
 last: "20170512",
 vers: "6.95",
 desc: "Search strings in a specified range of addresses and map it to a C struct."},

{name: "IDA Graph Exporter",
 url: "https://github.com/kirschju/ida-graph-exporter",
 src: "c++",
 last: "20230424",
 vers: "8.2",
 desc: "Layout-preserving graph view exporter plugin for IDA Pro (SVG/JSON)."},

{name: "IDAGraphity",
 url: "https://github.com/GuillaumeOrlando/IDAGraphity",
 src: "py",
 last: "20220505",
 desc: "An Interactive Binary Data Visualization Plugin for IDA Pro"},

{name: "ida-helpers",
 url: "https://github.com/VoidSec/ida-helpers",
 src: "py",
 last: "20220725",
 desc: "Collection of IDA helpers: Heap Viewer, Segment Dumper, Base Address, P/P/R (find pop/pop/ret gadgets), Func Complexity."},

{name: "idahunt",
 url: "https://github.com/nccgroup/idahunt",
 src: "py",
 last: "20230921",
 desc: "idahunt is a framework to analyze binaries with IDA Pro and hunt for things in IDA Pro. It is command line tool to analyse all executable files recursively from a given folder. It executes IDA in the background so you don't have to open manually each file. It supports executing external IDA Python scripts."},

{name: "IDA iBoot Loader",
 url: "https://github.com/matteyeux/ida-iboot-loader",
 src: "py",
 cats: "loader",
 last: "20240403",
 desc: "IDA loader for Apple's 64 bits iBoot, SecureROM and AVPBooter."},

{name: "idaidle",
 url: "https://github.com/google/idaidle",
 src: "c++",
 last: "20210217",
 vers: "7.5",
 desc: "idaidle is a plugin for the commercial IDA Pro disassembler that warns users if they leave their instance idling for too long. After a predetermined amount of idle time, the plugin first warns and later then saves the current disassemlby database and closes IDA."},

{name: "IDA Images",
 url: "https://github.com/rr-/ida-images",
 src: "py",
 last: "20220917",
 vers: "7.0",
 desc: "Image preview plugin for IDA disassembler."},

{name: "IDA IPython",
 url: "https://github.com/james91b/ida_ipython",
 src: "c++",
 cats: "dev, int",
 last: "20170805",
 vers: "6.9",
 desc: "This is a plugin to embed an IPython kernel in IDA Pro. The Python ecosystem has amazing libraries (and communities) for scientific computing. IPython itself is great for exploratory data analysis. Using tools such as the IPython notebook make it easy to share code and explanations with rich media. IPython makes using IDAPython and interacting with IDA programmatically really fun and easy."},

{name: "IdaJava",
 url: "https://github.com/cblichmann/idajava",
 src: "c++",
 cats: "dev",
 last: "20170215",
 vers: "5.7",
 desc: "Java integration for Hex-Rays IDA Pro. IdaJava is to Java like IDAPython is to Python: write IDA plugins in Java."},

{name: "IDA JScript",
 url: "https://github.com/dzzie/IDA_JScript",
 src: "c++",
 cats: "dev, int",
 last: "20220519",
 vers: "7.5",
 desc: "Javascript IDE for IDA with Debugger, Syntax highlighting & Intellisense. Write plugins in Javascript."},

{name: "ida-kallsyms",
 url: "https://github.com/mephi42/ida-kallsyms",
 src: "py",
 last: "20230927",
 desc: "IDA script for parsing kallsyms."},

{name: "ida_kcpp",
 url: "https://github.com/cellebrite-labs/ida_kcpp",
 src: "py",
 last: "20230629",
 vers: "8.0",
 desc: "An IDAPython module for enhancing c++ support on top of ida_kernelcache. Makes it more convenient to Reverse Engineer iOS kernelcaches."},

{name: "IDAKern",
 url: "https://github.com/NyaMisty/ida_kern",
 src: "py",
 cats: "dev",
 last: "20220410",
 desc: "Raw IDA Kernel API for IDAPython: An IDAPython wrapper for IDA Pro's kernel dll."},

{name: "ida_kernelcache",
 url: "https://github.com/bazad/ida_kernelcache",
 src: "py",
 last: "20181130",
 vers: "7.2",
 desc: "An IDA Toolkit for analyzing iOS kernelcaches."},

{name: "ida_kernelcache 7.5",
 url: "https://github.com/cellebrite-labs/ida_kernelcache",
 src: "py",
 last: "20230618",
 vers: "7.5",
 desc: "An IDA Toolkit for analyzing iOS kernelcaches. This fork was updated to work on IDA7.5/Python3/iOS 14.0.1."},

{name: "ida_kern_til",
 url: "https://github.com/NyaMisty/ida_kern_til",
 src: "py",
 last: "20230626",
 vers: "8.1",
 desc: "Tools for building TIL for IDA SDK & exporting them to python wrapper"},

{name: "IDA Key Checker",
 url: "https://github.com/pr701/ida_key_checker",
 src: "c++",
 last: "20210922",
 vers: "7.0",
 desc: "IDA Pro key checker tool, check IDA keys from the command line."},

{name: "idalink",
 url: "https://github.com/zardus/idalink",
 src: "py",
 cats: "dev, int",
 last: "20200714",
 vers: "7.4",
 desc: "Some glue facilitating remote use of IDA Python API. idalink works by spawning an IDA CLI session in the background (in a detached screen session), and connects to it using RPyC."},

{name: "ida-linux-alternatives",
 url: "https://github.com/opensrcsec/ida-linux-alternatives",
 src: "py",
 last: "20211214",
 vers: "7.0",
 desc: "Analyze and annotate Linux kernel alternatives (content of .altinstructions and .altinstr_replacement sections)."},

{name: "idallama",
 url: "https://github.com/lbl4/idallama",
 src: "py",
 cats: "decomp, int",
 last: "20230914",
 vers: "7.7",
 desc: "Use llama2 from neuroengine to use AI to help with decompilation. Fork of Gepetto."},

{name: "IDAMagicStrings",
 url: "https://github.com/joxeankoret/idamagicstrings",
 src: "py",
 last: "20231021",
 vers: "7.4",
 desc: "An IDA Python plugin to extract information from string constants. The current version of the plugin is able to:\n* Display functions to source files relationships (in a tree and in a plain list, a chooser in IDA language).\n* Display guessed function names for functions.\n* Rename functions according to the source code file their belong + address (for example, memory_mgmt_0x401050).\n* Rename functions according to the guessed function name."},

{name: "idamagnum",
 url: "https://github.com/lucasg/idamagnum",
 src: "py",
 cats: "int",
 last: "20200410",
 vers: "7.4",
 desc: "A plugin for integrating MagnumDB requests within IDA. MagNumDB is a database that contains about 380,000 items. These items are constants, names, values all extracted from more than 6,000 header files (.h, .hxx, .hpp, .idl, etc.) provided by standard Windows and Visual Studio SDKs and WDKs."},

{name: "IDA-MapSymbolParser",
 url: "https://github.com/gmh5225/IDA-MapSymbolParser",
 src: "py",
 last: "20240315",
 desc: "IDA Map File Symbol Renamer."},

{name: "ida_medigate",
 url: "https://github.com/medigateio/ida_medigate",
 src: "py",
 cats: "decomp",
 last: "20210215",
 vers: "7.5",
 desc: "Medigate plugin for c++ reverse engineering and other utils. Two parts:\n* Implementation of C++ classes and polymorphism over IDA\n* A RTTI parser which rebuilds the classes hierarchy."},

{name: "IDAMetrics",
 url: "https://github.com/mxmssh/idametrics",
 src: "py",
 last: "20180104",
 vers: "5.5",
 desc: "IDA plugins for static software complexity metrics collection. Collects static software complexity metrics for binary executables of x86 architecture."},

{name: "IDA Migrator",
 url: "https://github.com/giladreich/ida_migrator",
 src: "py",
 last: "20210528",
 vers: "7.6",
 desc: "IDA Migrator plugin makes the job of migrating symbols and type informations from one IDA database instance to another. It will help migrating function names, structures and enums. This comes in handy when:\n* Moving to a newer version of IDA that does better analysis and you don't want to change in the new instance type information or variable names of the decompiled functions.\n* The current idb instance fails to decompile a function or the decompilation looks wrong in comparison to another idb instance of the same binary.\n* Experimenting on another idb instance before making major changes on the current instance.\n* A lightweight easy way of creating small backups of the current work.\n* For w/e reason, the current idb instance you're working on gets corrupted."},

{name: "IDA-minsc",
 url: "https://github.com/arizvisa/ida-minsc",
 src: "py",
 cats: "dev",
 last: "20240221",
 vers: "7.4",
 desc: "A plugin that assists a user with scripting the IDAPython plugin that is bundled with the disassembler. This plugin groups the different aspects of the IDAPython API into a simpler format which allows a reverse engineer to script different aspects of their work with very little investment."},

{name: "IDA-names",
 url: "https://github.com/archercreat/ida_names",
 src: "py",
 cats: "ui",
 last: "20221224",
 vers: "7.0",
 desc: "IDA-names automatically renames pseudocode windows with the current function name."},

{name: "ida-netnode",
 url: "https://github.com/williballenthin/ida-netnode",
 src: "py",
 cats: "dev",
 last: "20200629",
 desc: "Humane API for storing and accessing persistent data in IDA Pro databases."},

{name: "IDAngr",
 url: "https://github.com/andreafioraldi/IDAngr",
 src: "py",
 cats: "debug, int",
 last: "20200722",
 desc: "Use angr in the ida debugger generating a state from the current debug session."},

{name: "IDA - Nightfall",
 url: "https://github.com/0xItx/ida_nightfall",
 src: "py",
 cats: "ui",
 last: "20190625",
 vers: "7.3",
 desc: "A dark color theme for IDA Pro"},

{name: "IDAObjcTypes",
 url: "https://github.com/PoomSmart/IDAObjcTypes",
 src: "py",
 last: "20240220",
 vers: "7.2",
 desc: "A collection of (public and private) types and functions definitions useful for Objective-C binaries analysis."},

{name: "IDA-Operand-Analysis",
 url: "https://github.com/Learner0x5a/IDA-Operand-Analysis",
 src: "py",
 last: "20220605",
 vers: "7.6",
 desc: "Operand Analysis with IDA Pro: per-operand read/write status, operand type, operand id."},

{name: "idapatch",
 url: "https://github.com/mrexodia/idapatch",
 src: "c++",
 last: "20160903",
 vers: "6.8",
 desc: "IDA plugin to patch IDA Pro in memory."},

{name: "IDA Patcher",
 url: "https://github.com/iphelix/ida-patcher",
 src: "py",
 last: "20140923",
 desc: "IDA Patcher is a plugin for Hex-Ray's IDA Pro disassembler designed to enhance IDA's ability to patch binary files and memory."},

{name: "IDAPatchExpression",
 url: "https://github.com/SandokanCZ/IDAPatchExpression",
 src: "py",
 last: "20230405",
 desc: "Patch Expression Plugin lets you search for an expression in IDA and replace all bytes in the matches to the selected value."},

{name: "IDA Patchwork",
 url: "https://bitbucket.org/daniel_plohmann/idapatchwork",
 src: "py",
 last: "20141104",
 desc: "Stitching against malware families with IDA Pro (tool for the talk at Spring9, https://spring2014.gdata.de/spring2014/programm.html). In essence, I use a somewhat fixed / refurbished version of PyEmu along IDA to demonstrate deobfuscation of the different patterns found in the malware family Nymaim."},

{name: "IDA Pattern Search",
 url: "https://github.com/david-lazar/IDAPatternSearch",
 src: "py",
 last: "20210914",
 desc: "IDAPatternSearch adds a capability of finding functions according to bit-patterns into the well-known IDA Pro disassembler based on Ghidra’s function patterns format."},

{name: "IDA P-Code",
 url: "https://github.com/binarly-io/idapcode",
 src: "py",
 last: "20231027",
 desc: "IDA plugin displaying the P-Code for the current function."},

{name: "IDA PDB Loader (IPL)",
 url: "https://github.com/ax330d/ida_pdb_loader",
 src: "py",
 last: "20180921",
 desc: "Simple plugin to load PDB symbols. The problem is that sometimes IDA crashes for me when trying to load symbols, so I came up with this quick and dirty alternative."},

{name: "IDAPerl",
 url: "https://github.com/nlitsme/idaperl",
 src: "c++",
 cats: "dev",
 last: "20160724",
 vers: "6.5",
 desc: "Adds perl scripting support to ida."},

{name: "idapin",
 url: "https://github.com/Rupan/idapin",
 src: "c++",
 cats: "debug, int",
 last: "20240217",
 vers: "8.0",
 desc: "A debugger backend for IDA Pro built on top of of Intel’s PIN framework."},

{name: "IDAPinLogger",
 url: "https://github.com/wirepair/idapinlogger",
 src: "c++",
 cats: "trace",
 last: "20130705",
 desc: "Logs instruction hits to a file which can be fed into IDA Pro to highlight which instructions were called."},

{name: "IDA Plugin Loader",
 url: "https://github.com/tmr232/ida-plugin-loader",
 src: "py",
 last: "20191027",
 vers: "7.4",
 desc: "Random IDA scripts, plugins, example code (some of it may be old and not working anymore)."},

{name: "idaplugins",
 url: "https://github.com/patois/idaplugins",
 src: "c++",
 last: "20170205",
 desc: "Random IDA scripts, plugins, example code (some of it may be old and not working anymore)."},

{name: "idaplugins",
 url: "https://github.com/tmr232/ida-plugins",
 src: "py",
 last: "20150531",
 vers: "6.7",
 desc: "Plugins for IDA: Plugin Proxy, Function Strings, LCA Graph, Autoenum, Autostruct, Function Flow, Quick Copy."},

{name: "ida-plugins",
 url: "https://vmallet.github.io/ida-plugins/",
 desc: "Interactive IDA Plugin List: a great list of plugins for IDA which can be sorted and filtered dynamically to make it easier to find plugins of interest. Worth checking out! :)"},

{name: "IDA-Plugin-Template",
 url: "https://github.com/gurrenm3/IDA-Plugin-Template",
 src: "c++",
 cats: "dev",
 last: "20231216",
 desc: "A basic C++ Plugin template for new IDA Plugins."},

{name: "idapm",
 url: "https://github.com/tkmru/idapm",
 src: "py",
 last: "20200905",
 desc: "idapm is IDA Plugin Manager. It works perfectly on macOS, it probably works on Windows and Linux."},

{name: "IDA Pro Auto Decompile",
 url: "https://github.com/koharin/idapro_auto_decompile",
 src: "py",
 cats: "decomp",
 last: "20221019",
 vers: "7.7",
 desc: "Get Decompile code without executing IDA Pro GUI using IDAPython and idat.exe or ida.exe."},

{name: "IDA-Pro-Dark-Theme",
 url: "https://github.com/BresoDEV/IDA-Pro-Dark-Theme",
 cats: "ui",
 last: "20220320",
 desc: "Dark theme for IDA Pro <V7."},

{name: "IDA Pro Function Hunter",
 url: "https://github.com/alexander-pick/ida-pro-function-hunter",
 src: "py",
 last: "20231028",
 vers: "8.3",
 desc: "Script to find interesting syscalls and patterns in binaries."},

{name: "ida-pro-loadmap",
 url: "https://github.com/mefistotelis/ida-pro-loadmap",
 src: "c++",
 last: "20230420",
 vers: "7.0",
 desc: "Plugin for IDA Pro disassembler which allows loading .map files."},

{name: "idapro_m6502",
 url: "https://github.com/LucienMP/idapro_m6502",
 src: "py",
 cats: "debug",
 last: "20201110",
 vers: "7.3",
 desc: "Extends existing support in IDA Pro for the m6502 processor family by adding gdb XML support, and step-over and type information support. Aim was to debug NES roms."},

{name: "idapro_m68k",
 url: "https://github.com/LucienMP/idapro_m68k",
 src: "py",
 cats: "debug",
 last: "20190714",
 vers: "7.3",
 desc: "Extends existing support in IDA for the Motorola m68k processor family by adding gdb step-over and type information support. Enable type information support so you can press \"y\" on functions and have the parameters propagate inside and back out of the function."},

{name: "IDA Pro SigMaker",
 url: "https://github.com/A200K/IDA-Pro-SigMaker",
 src: "c++",
 last: "20240408",
 vers: "8.1",
 desc: "Signature Maker Plugin for IDA Pro 8.1."},

{name: "IDA Pro Solarized Theme",
 url: "https://github.com/blue-devil/IDA-Pro-Solarized-Theme",
 cats: "ui",
 last: "20220814",
 vers: "7.3",
 desc: "Solarized Theme for IDA Pro 7.3 and above."},

{name: "IDA Pro Translator",
 url: "https://github.com/kyrus/ida-translator",
 src: "py",
 last: "20150209",
 vers: "6.3",
 desc: "Assists in decoding arbitrary character sets in an IDA Pro database into Unicode, then automatically invoking a web-based translation service (currently Google Translate) to translate that foreign text into English."},

{name: "IDA Pro Unity PDB Downloader",
 url: "https://github.com/SamuelTulach/ida-unity-pdb-downloader",
 src: "c++",
 last: "20240411",
 desc: "Simple IDA Pro plugin to download Unity debug symbols from their symbol server."},

{name: "IDAPyHelper",
 url: "https://github.com/patois/IDAPyHelper",
 src: "py",
 cats: "dev",
 last: "20221018",
 vers: "7.0",
 desc: "IDAPyHelper is a script for the Interactive Disassembler that helps writing IDAPython scripts and plugins."},

{name: "ida-py-plugin-fix-function-tails",
 url: "https://github.com/youselfcan/ida-py-plugin-fix-function-tails",
 src: "py",
 last: "20230311",
 desc: "Plugin for fixing function tails."},

{name: "IDAPython",
 url: "https://github.com/idapython/src",
 src: "c++",
 cats: "dev, int",
 last: "20240221",
 vers: "8.0",
 desc: "IDAPython project for Hex-Ray's IDA Pro: the official source for the Python integration plugin for IDA."},

{name: "IDA Python Embedded Toolkit",
 url: "https://github.com/maddiestone/IDAPythonEmbeddedToolkit",
 src: "py",
 last: "20190814",
 vers: "6.95",
 desc: "IDAPython scripts for automating analysis of firmware of embedded devices."},

{name: "idapython_virtualenv",
 url: "https://github.com/gaasedelen/idapython_virtualenv",
 src: "py",
 cats: "dev",
 last: "20201111",
 vers: "7.5",
 desc: "Multiples virtual envs support for IDAPython. Enable Virtualenv or Conda in IDAPython."},

{name: "IDA-QuickRunPython-Plugin",
 url: "https://github.com/gurrenm3/IDA-QuickRunPython-Plugin",
 src: "py",
 last: "20231216",
 desc: "Quickly execute any python script."},

{name: "IDARay",
 url: "https://github.com/SouhailHammou/IDARay-Plugin",
 src: "py",
 last: "20181116",
 vers: "6.8",
 desc: "IDARay is an IDA Pro plugin that matches the database against multiple YARA files. Maybe your rules are scattered over multiple YARA files or you simply want to match against as much rules as possible, IDARay is here to help."},

{name: "IDARE",
 url: "https://github.com/twisted-fun/IDARE",
 src: "py",
 last: "20210907",
 vers: "7.5",
 desc: "Automation plugins for various reversing tasks in IDA: JumpTableFuncRename, VulnCandidateFinder."},

{name: "IdaRef",
 url: "https://github.com/nologic/idaref",
 src: "py",
 last: "20211020",
 vers: "7.4",
 desc: "IDA Pro Full Instruction Reference Plugin - It's like auto-comments but useful."},

{name: "IDA Rest",
 url: "https://github.com/dshikashio/idarest",
 src: "py",
 cats: "dev, int",
 last: "20150321",
 vers: "6.7",
 desc: "A simple REST-like API for basic interoperability with IDA Pro."},

{name: "IDArling",
 url: "https://github.com/IDArlingTeam/IDArling/",
 src: "py",
 cats: "collab",
 last: "20210217",
 vers: "7.0",
 desc: "IDArling is a collaborative reverse engineering plugin for IDA Pro and Hex-Rays. It allows to synchronize in real-time the changes made to a database by multiple users, by connecting together different instances of IDA Pro."},

{name: "IDArling (Fork)",
 url: "https://github.com/fidgetingbits/IDArling",
 src: "py",
 cats: "collab",
 last: "20220802",
 vers: "7.5",
 desc: "IDArling is a collaborative reverse engineering plugin for IDA Pro and Hex-Rays. This is an actively maintained fork of the now-abandoned IDARling above."},

{name: "Idarop",
 url: "https://github.com/lucasg/idarop",
 src: "py",
 last: "20180605",
 vers: "7.1",
 desc: "ROP database plugin for IDA: list and store all the ROP gadgets presents within the opened binary. (inspired from idasploiter)."},

{name: "ida-rpc",
 url: "https://github.com/offlineJ/ida-rpc",
 src: "c++",
 cats: "int",
 last: "20190426",
 vers: "7.0",
 desc: "Discord rich presence plugin for IDA Pro 7.0"},

{name: "IDA-RPyC",
 url: "https://github.com/HyperSine/ida-rpyc",
 src: "py",
 cats: "int",
 last: "20230325",
 desc: "IDA plugin that allows you call IDA python APIs from remote."},

{name: "IDA-RunLastScript",
 url: "https://github.com/Scags/IDA-RunLastScript",
 src: "py",
 last: "20230816",
 desc: "IDA Pro plugin with a shortcut to run the most previously used script."},

{name: "IDARustDemangler",
 url: "https://github.com/timetravelthree/IDARustDemangler",
 src: "py",
 cats: "decomp",
 last: "20230724",
 vers: "7.0",
 desc: "Rust Demangler & Normalizer plugin for IDA, makes it easier to read and understand the code."},

{name: "IDA-RustFunDemangle",
 url: "https://github.com/0xMirasio/IDA-RustFunDemangle",
 src: "py",
 last: "20221227",
 desc: "Auto RUST function demangler plugin."},

{name: "ida_rust_plugin",
 url: "https://github.com/wINfOG/ida_rust_plugin/tree/main",
 src: "rs",
 cats: "dev",
 last: "20221003",
 desc: "Write IDA-Plugin with rust language."},

{name: "ida-rust-untangler",
 url: "https://github.com/cxiao/ida-rust-untangler",
 src: "py",
 cats: "decomp",
 last: "20230703",
 vers: "7.0",
 desc: "An IDA plugin for demangling Rust function names."},

{name: "IDAscope",
 url: "https://github.com/danielplohmann/idascope",
 src: "py",
 last: "20220802",
 vers: "7.0",
 desc: "IDAscope is an IDA Pro extension with the goal to ease the task of (malware) reverse engineering with a current focus on x86 Windows. It consists of multiple tabs, containing functionality to achieve different goals such as fast identification of semantically interesting locations in the analysis target, seamless access to MSDN documentation of Windows API, and finding of potential crypto/compression algorithms."},

{name: "idascripts",
 url: "https://github.com/nlitsme/idascripts",
 src: "py",
 cats: "dev",
 last: "20201125",
 vers: "7.0",
 desc: "IDC and idapython script collection. enumerators.py contains several iterators."},

{name: "ida-scripts",
 url: "https://github.com/danigargu/ida-scripts",
 src: "py",
 last: "20161017",
 desc: "Misc IDA Pro scripts: cyclomatic_complexity, go_stripped_helper."},

{name: "ida-scripts (cra0)",
 url: "https://github.com/cra0/ida-scripts",
 src: "py",
 last: "20231220",
 desc: "Various IDA scripts for Reverse Engineering: Cra0 Signature Definition File Importer, Cra0 VTable Definition File Importer, cvutils-getoffset, cvutils-gotooffset."},

{name: "idascripts (maiyao1988)",
 url: "https://github.com/maiyao1988/IDAScripts",
 src: "py",
 last: "20230215",
 desc: "Common IDA scripts for effective Reverse Engineering: comment-trace, dbg-loc-off, deopt, findsvc, get_all_code, get_all_svc, ida_trace, trace."},

{name: "ida-scripts (sam-b)",
 url: "https://github.com/sam-b/ida-scripts",
 src: "py",
 last: "20161009",
 desc: "Dumping ground for whatever IDA Pro scripts I write: call_graph, export2neo4j, find_device_name, mem_complexity, most_refs."},

{name: "idasec",
 url: "https://github.com/robindavid/idasec",
 src: "py",
 cats: "int",
 last: "20171119",
 desc: "IDA plugin for reverse-engineering and dynamic interactions with the Binsec platform."},

{name: "ida-settings",
 url: "https://github.com/williballenthin/ida-settings",
 src: "py",
 cats: "dev",
 last: "20200909",
 desc: "Fetch and set configuration values from IDAPython scripts."},

{name: "idasetup",
 url: "https://github.com/lucasg/idasetup",
 src: "py",
 cats: "dev",
 last: "20171028",
 vers: "7.0",
 desc: "Custom setup.py file for IDA plugins."},

{name: "IDAShell",
 url: "https://github.com/namazso/IDAShell",
 src: "c++",
 cats: "int",
 last: "20230217",
 desc: "IDAShell is a shell extension for launching IDA from the context menu of executables (Windows)."},

{name: "IDA_ShowCallStack",
 url: "https://github.com/radkum/IDA_ShowCallStack",
 src: "py",
 cats: "debug",
 last: "20221002",
 vers: "7.6",
 desc: "Display call stacks during debugging."},

{name: "IDA Signature Matching Tool",
 url: "http://sourceforge.net/projects/idasignsrch/",
 src: "c++",
 last: "20180713",
 vers: "7.1",
 desc: "Tool for searching signatures inside files, extremely useful as help in reversing jobs like figuring or having an initial idea of what encryption/compression algorithm is used for a proprietary protocol or file. It can recognize tons of compression, multimedia and encryption algorithms and\nmany other things like known strings and anti-debugging code which can be also manually added since it's all based on a text signature file read at run-time and easy to modify."},

{name: "idasix",
 url: "https://github.com/nirizr/idasix",
 src: "py",
 cats: "dev",
 last: "20180802",
 vers: "6.95",
 desc: "IDAPython compatibility library. idasix aims to create a smooth ida development process and allow a single codebase to function with multiple IDA/IDAPython versions."},

{name: "IDA Skins",
 url: "https://github.com/zyantific/IDASkins",
 src: "py",
 cats: "ui",
 last: "20190615",
 vers: "7.2",
 desc: "Plugin providing advanced skinning support for the Qt version of IDA Pro utilizing Qt stylesheets, similar to CSS."},

{name: "idasm",
 url: "https://github.com/lyciumlee/idasm",
 src: "py",
 cats: "dev",
 last: "20220802",
 desc: "A Python Assembler Script Tool for IDA Pro based on \"patching\"."},

{name: "IDA Sploiter",
 url: "https://github.com/iphelix/ida-sploiter",
 src: "py",
 last: "20190513",
 vers: "6.5",
 desc: "IDA Sploiter is a plugin for Hex-Ray's IDA Pro disassembler designed to enhance IDA's capabilities as an exploit development and vulnerability research tool. Some of the plugin's features include a powerful ROP gadgets search engine, semantic gadget analysis and filtering, interactive ROP chain builder, stack pivot analysis, writable function pointer search, cyclic memory pattern generation and offset analysis, detection of bad characters and memory holes, and many others."},

{name: "IDA Stealth",
 url: "https://github.com/nihilus/idastealth",
 src: "c++",
 cats: "debug",
 last: "20140914",
 vers: "5.6",
 desc: "IDAStealth is a plugin which aims to hide the IDA debugger from most common anti-debugging techniques. The plugin is composed of two files, the plugin itself and a dll which is injected into the debuggee as soon as the debugger attaches to the process. The injected dll actually implements most of the stealth techniques either by hooking system calls or by patching some flags in the remote process."},

{name: "IDA StrikeOut",
 url: "https://github.com/0xeb/ida-strikeout",
 src: "c++",
 cats: "decomp",
 last: "20240428",
 vers: "7.5",
 desc: "IDA strike-out: A Hex-Rays decompiler plugin to patch the Ctree (e.g. remove statements)."},

{name: "IDA StringCluster",
 url: "https://github.com/Comsecuris/ida_strcluster",
 src: "py",
 last: "20180314",
 vers: "6.9",
 desc: "This plugin extends IDA Pro's capabilities to display strings within the binary by clustering found strings on a per-function basis."},

{name: "IDAStringFindNet",
 url: "https://github.com/luodaoyi/IDAStringFindNet",
 src: "c++",
 last: "20220917",
 vers: "7.6",
 desc: "String search plugin (Chinese)."},

{name: "IDA-String-Reference-Locator",
 url: "https://github.com/praydog/IDA-String-Reference-Locator-Plugin",
 src: "c++",
 last: "20211216",
 vers: "7.0",
 desc: "Finds all first occurring string references near another reference."},

{name: "IDASync",
 url: "https://github.com/Nomad-Group/IDASync",
 src: "c++",
 cats: "collab",
 last: "20181102",
 desc: "A lovely IDA collaboration plugin for IDA 6.8 (x86 & x64) by @Freeeaky."},

{name: "IDA Taco",
 url: "https://github.com/jjo-sec/idataco",
 src: "py",
 cats: "int",
 last: "20160614",
 desc: "Bring Cuckoo Sandbox-generated output into IDA Pro to assist in reverse engineering malware as well as combining some commonly used tools into one UI."},

{name: "IDATag",
 url: "https://github.com/thalium/idatag",
 src: "c++",
 last: "20190719",
 vers: "7.3",
 desc: "Tag explorer for IDA Pro. The plugin leverages IDA as a platform to map, explore, and visualize collected tags. Tags can come from multiple sources such as IDA itself or different other clients."},

{name: "IdaThemer",
 url: "https://github.com/can1357/IdaThemer",
 src: "go",
 cats: "ui",
 last: "20240126",
 desc: "Seamlessly convert your favorite Visual Studio Code themes to IDA Pro themes."},

{name: "IDA Toolbag",
 url: "https://github.com/aaronportnoy/toolbag",
 src: "py",
 last: "20150130",
 desc: "The IDA Toolbag plugin provides many handy features, such as:\n* A 'History' view, that displays functions in the disassembly that you have decided are important, and the relationships between them.\n* A code path-searching tool, that lets you find what functions (or blocks) are forming a path between two locations.\n* Manage and run your IDC/Python scripts\n* Something that's also of considerable importance is that the IDA Toolbag lets you collaborate with other IDA users: one can publish his 'History', or import another user's history & even merge them!\n* See the official documentation for an extensive feature list."},

{name: "IDATopaqueminator",
 url: "https://github.com/tomer132246/IDATopaqueminator",
 src: "py",
 last: "20230919",
 vers: "7.0",
 desc: "IDA plugin for simple opaque predicates removal using symbolic execution with angr."},

{name: "idatrace2tree",
 url: "https://github.com/haltarkon/idatrace2tree",
 src: "c++",
 cats: "trace",
 last: "20220623",
 desc: "A tool for converting a trace obtained from IDA PRO to a text tree view."},

{name: "IDAtropy",
 url: "https://github.com/danigargu/IDAtropy",
 src: "py",
 last: "20210416",
 vers: "7.4",
 desc: "IDAtropy is a plugin for Hex-Ray's IDA Pro designed to generate charts of entropy and histograms using the power of idapython and matplotlib."},

{name: "IDAVenv",
 url: "https://github.com/Skwteinopteros/ida-venv",
 src: "py",
 cats: "dev",
 last: "20240404",
 desc: "An IDAPYthon plugin to create and use Python virtual environments."},

{name: "ida_vmware_windows_gdb",
 url: "https://github.com/therealdreg/ida_vmware_windows_gdb",
 src: "py",
 last: "20230811",
 vers: "7.4",
 desc: "Helper script for Windows kernel debugging with IDA Pro on VMware + GDB stub (including PDB symbols)."},

{name: "ida_vmx128_helper",
 url: "https://github.com/Goatman13/ida_vmx128_helper",
 src: "py",
 last: "20240303",
 desc: "Plugin to fix misinterpreted VMX128 A register in IDA."},

{name: "IDAVSCode",
 url: "https://github.com/Cirn09/idavscode",
 src: "py",
 cats: "dev, int",
 last: "20230320",
 vers: "7.0",
 desc: "Debug IDAPython in VSCode. (docs in Chinese)."},

{name: "IdaVSHelp",
 url: "https://github.com/andreafioraldi/IdaVSHelp",
 src: "py",
 cats: "dev, int",
 last: "20170513",
 vers: "6.8",
 desc: "IDAPython plugin to integrate Visual Studio Help Viewer in IDA Pro >= 6.8"},

{name: "idaware",
 url: "https://github.com/soobnoid/idaware",
 src: "py",
 cats: "dev",
 last: "20240114",
 desc: "Create python hooks and (x64) AoB signatures in Ida Pro."},

{name: "idawasm",
 url: "https://github.com/fireeye/idawasm",
 src: "py",
 cats: "loader, proc",
 last: "20181004",
 vers: "7.1",
 desc: "These IDA Pro plugins add support for loading and disassembling WebAssembly modules.\n* control flow reconstruction and graph mode\n* code and data cross references\n* globals, function parameters, local variables, etc. can be renamed\n* auto-comment hint support"},

{name: "IDA Wax",
 url: "https://github.com/Ernegien/idawax",
 src: "c++",
 last: "20220904",
 vers: "7.0",
 desc: "IDA x86 Executable Analysis Cleanup Plugin."},

{name: "idawilli",
 url: "https://github.com/williballenthin/idawilli",
 src: "py",
 last: "20240321",
 desc: "IDA Pro resources, scripts, and configurations."},

{name: "IdaWorkSpace",
 url: "https://github.com/wlingze/IdaWorkspace",
 src: "py",
 last: "20220806",
 desc: "IDA structure build plugin. Assist the reversing of multiple files, handles interdependencies."},

{name: "idax",
 url: "https://github.com/0xeb/idax",
 src: "c++",
 cats: "dev",
 last: "20240428",
 vers: "7.5",
 desc: "idax is a set of C++ extensions for the IDASDK. These extensions are a work in progress and are not meant to be used in production code yet. As of now, only my personal IDA plugins use idax."},

{name: "IDA x64dbgExport",
 url: "https://github.com/kweatherman/ida_x64dbgexport_plugin",
 src: "c++",
 cats: "debug, int",
 last: "20220115",
 desc: "A binary x64dbg debugger export plugin for IDA Pro. A binary plugin version of mrexodia's official Python version (x64dbgida) but only with an export, no 'import' option."},

{name: "idaxex",
 url: "https://github.com/emoose/idaxex",
 src: "c++",
 cats: "loader",
 last: "20221012",
 vers: "7.5",
 desc: "Xbox360/Xenon loader plugin for IDA 7.2+, supporting most known Xbox360/Xenon .XEX executable file formats."},

{name: "IDA Xtensa",
 url: "https://github.com/themadinventor/ida-xtensa",
 src: "py",
 cats: "proc",
 last: "20190820",
 vers: "7.0",
 desc: "This is a processor plugin for IDA, to support the Xtensa core found in Espressif ESP8266. It does not support other configurations of the Xtensa architecture, but that is probably (hopefully) easy to implement."},

{name: "ida_yara",
 url: "https://github.com/alexander-hanel/ida_yara",
 src: "py",
 last: "20180904",
 vers: "7.0",
 desc: "A python script that can be used to scan data within in an IDB using Yara."},

{name: "ida-yara-processor",
 url: "https://github.com/bnbdr/ida-yara-processor",
 src: "py",
 cats: "loader, proc",
 last: "20190122",
 vers: "7.0",
 desc: "Compiled YARA Rules Processor for IDA."},

{name: "idb2pat",
 url: "https://github.com/alexander-pick/idb2pat",
 src: "c++",
 last: "20111008",
 vers: "6.2",
 desc: "IDB to Pat, fixed to work with IDA 6.2. Create patterns for IDA objects."},

{name: "idb-import-plugin",
 url: "https://github.com/Vector35/idb-import-plugin",
 src: "rs",
 cats: "int",
 last: "20231218",
 desc: "IDA Database Importer plugin for Binary Ninja, written in Rust."},

{name: "idbutil",
 url: "https://github.com/nlitsme/idbutil",
 src: "c++",
 cats: "dev, int",
 last: "20231108",
 vers: "7.0",
 desc: "IDBTOOL - Library and tool for reading IDApro databases. (See Python version 'pyidbutil')"},

{name: "idcinternals",
 url: "https://github.com/nlitsme/idcinternals",
 src: "c++",
 cats: "dev",
 last: "20231027",
 vers: "7.5",
 desc: "IDA plugin investigating the internal representation of IDC scripts"},

{name: "idenLib",
 url: "https://github.com/secrary/IDA-scripts/tree/master/idenLib",
 src: "py",
 last: "20190226",
 desc: "Library Function Identification plugin for IDA Pro."},

{name: "IFL",
 url: "https://github.com/hasherezade/ida_ifl",
 src: "py",
 last: "20230330",
 vers: "7.0",
 desc: "Interactive Functions List is an user-friendly way to navigate between functions and their references."},

{name: "ifred",
 url: "https://github.com/Jinmo/ifred",
 src: "c++",
 last: "20240504",
 desc: "IDA command palette & more (Ctrl+Shift+P, Ctrl+P)."},

{name: "IISHelper",
 url: "https://github.com/PwCUK-CTO/iis-helper-plugin",
 src: "py",
 cats: "decomp",
 last: "20231113",
 vers: "8.3",
 desc: "IDA Pro plugin to aid with the analysis of native IIS modules."},

{name: "import-kallsyms",
 url: "https://github.com/XMCVE/import-kallsyms",
 src: "py",
 cats: "int",
 last: "20240423",
 desc: "IDA Pro Plugin to import /proc/kallsyms for Linux Kernel."},

{name: "IPyIDA",
 url: "https://github.com/eset/ipyida",
 src: "py",
 cats: "dev, int",
 last: "20221223",
 vers: "7.6",
 desc: "PyIDA is a python-only solution to use a IPython console in the context of IDA Pro. It spawns an IPython kernel that you can connect to with `ipython console --existing` in your shell or by opening a *QT Console* window in IDA Pro with `<Shift-.>`"},

{name: "J.A.R.V.I.S.",
 url: "https://github.com/carlosgprado/JARVIS",
 src: "py",
 cats: "trace",
 last: "20181019",
 desc: "Just Another ReVersIng Suite: a small bughunting suite comprising three elements: a fuzzer, a tracer based on INTEL PIN, a plugin for IDA Pro thought to assist you with the most common reversing tasks. It integrates with the tracer."},

{name: "JNIDA",
 url: "https://github.com/applicazza/JNIDA",
 src: "py",
 last: "20191118",
 vers: "7.4",
 desc: "Helps to rename JNI native methods and restore their C signatures"},

{name: "jni_helper",
 url: "https://github.com/evilpan/jni_helper",
 src: "py",
 last: "20240206",
 vers: "7.4",
 desc: "Find JNI function signatures in APK, Load JNI function signatures and apply to IDA-Pro"},

{name: "Kam1n0",
 url: "https://github.com/McGill-DMaS/Kam1n0-Plugin-IDA-Pro",
 src: "py",
 last: "20230227",
 vers: "7.4",
 desc: "Kam1n0 is a scalable system that supports assembly code clone search. It allows a user to first index a (large) collection of binaries, and then search for the code clones of a given target function or binary file. Kam1n0 tries to solve the efficient subgraph search problem (i.e. graph isomorphism problem) for assembly functions."},

{name: "Karta",
 url: "https://github.com/CheckPointSW/Karta",
 src: "py",
 last: "20220315",
 vers: "7.4",
 desc: "\"Karta\" (Russian for \"Map\") is a source code assisted fast binary matching plugin for IDA. Karta identifies and matches open-sourced libraries in a given binary using a unique technique that enables it to support huge binaries (> 200,000 functions) with almost no impact on the overall performance."},

{name: "Keypatch",
 url: "https://github.com/keystone-engine/keypatch",
 src: "py",
 last: "20210218",
 vers: "7.5",
 desc: "A multi-architecture assembler for IDA. Keypatch allows you enter assembly instructions to directly patch the binary under analysis. Powered by [Keystone engine](http://keystone-engine.org)."},

{name: "kirk",
 url: "https://github.com/ProximaV/kirk",
 src: "c++",
 cats: "proc",
 last: "20240506",
 vers: "8.3",
 desc: "Theoretical Processor Module for IDA Pro."},

{name: "kpwd",
 url: "https://github.com/lzyddf/kpwd",
 src: "py",
 cats: "debug",
 last: "20220601",
 vers: "7.5",
 desc: "Keep the pseudo-code interface display while debugging."},

{name: "Labeless",
 url: "https://github.com/a1ext/labeless",
 src: "c++",
 cats: "debug",
 last: "20220325",
 vers: "6.95",
 desc: "Labeless is a plugin system for dynamic, seamless and realtime synchronization between IDA Database and Olly. Labels, function names and global variables synchronization is supported. \nLabeless provides easy to use dynamic dumping tool, which supports automatic on-the-fly imports fixing as well as convenient tool for IDA-Olly Python scripting synergy."},

{name: "LazyIDA",
 url: "https://github.com/L4ys/LazyIDA",
 src: "py",
 last: "20221008",
 vers: "7.0",
 desc: "LazyIDA lets you perform many tasks simply and quickly (e.g., remove function return type in Hex-Rays, convert data into different formats, scan for format string vulnerabilities and a variety of shortcuts)"},

{name: "lib2smda",
 url: "https://github.com/danielplohmann/lib2smda",
 src: "py",
 cats: "dev, int",
 last: "20230823",
 vers: "7.4",
 desc: "Helper tool to use IDA Pro to convert lib files into SMDA format."},

{name: "Lighthouse",
 url: "https://github.com/gaasedelen/lighthouse",
 src: "py",
 last: "20240205",
 vers: "7.0",
 desc: "Lighthouse is a Code Coverage Plugin for IDA Pro. The plugin leverages IDA as a platform to map, explore, and visualize externally collected code coverage data when symbols or source may not be available for a given binary."},

{name: "linux_kernel_debug_disassemble_ida_vmware",
 url: "https://github.com/therealdreg/linux_kernel_debug_disassemble_ida_vmware",
 src: "py",
 last: "20230811",
 vers: "7.7",
 desc: "Helper script for Linux kernel disassemble or debugging with IDA Pro on VMware + GDB stub (including some symbols helpers)."},

{name: "LLVMAnalyzer",
 url: "https://github.com/cbwang505/llvmanalyzer",
 src: "c++",
 last: "20220406",
 vers: "7.0",
 desc: "Based on a retdec open source decompiler tool and on the LLVM compiler architecture, the author integrates the klee symbolic execution tool, and dynamically simulates the decompiled llvm ir (intermediate instruction set) operation through the Symbolic Execution engine. (Chinese)."},

{name: "lm32",
 url: "https://github.com/ProximaV/lm32",
 src: "c++",
 cats: "proc",
 last: "20240215",
 vers: "8.3",
 desc: "LatticeMico32 IDA Pro Processor Module."},

{name: "LoadProcConfig",
 url: "https://github.com/alexhude/LoadProcConfig",
 src: "c++",
 cats: "proc",
 last: "20220927",
 vers: "8.0",
 desc: "LoadProcConfig is an IDA plugin to load processor configuration files."},

{name: "Localxrefs",
 url: "https://github.com/devttys0/ida/tree/master/plugins/localxrefs",
 src: "py",
 last: "20210602",
 vers: "7.4",
 desc: "Finds references to any selected text from within the current function."},

{name: "Lucid",
 url: "https://github.com/gaasedelen/lucid",
 src: "py",
 cats: "decomp, dev",
 last: "20200915",
 vers: "7.2",
 desc: "Lucid is a developer-oriented IDA Pro plugin for exploring the Hex-Rays microcode. It was designed to provide a seamless, interactive experience for studying microcode transformations in the decompiler pipeline."},

{name: "Lumen",
 url: "https://github.com/naim94a/lumen",
 src: "rs",
 cats: "int",
 last: "20240513",
 vers: "7.2",
 desc: "A private Lumina server for IDA Pro written in Rust."},

{name: "lumina-go",
 url: "https://github.com/zhangyoufu/lumina",
 src: "go",
 cats: "int",
 last: "20230615",
 desc: "A Go library speaking (IDA Pro) lumina protocol, and a proxy server that may help if you have any privacy concerns using the Hex-Rays' official lumina server."},

{name: "MadNES",
 url: "https://github.com/patois/MadNES",
 src: "c++",
 cats: "int",
 last: "20120912",
 vers: "4.9",
 desc: "This plugin exports IDA names to FCEUXD SP symbols. These can be loaded by FCEUXD SP to allow symbolic debugging."},

{name: "mark_executed_code",
 url: "https://github.com/lzyddf/mark_executed_code",
 src: "py",
 cats: "debug",
 last: "20231127",
 vers: "7.5",
 desc: "Mark the code which is executed while debugging, including pseudo-code and assembly code."},

{name: "Match4IDA",
 url: "https://github.com/riskeco/Match4IDA",
 src: "py",
 cats: "int",
 last: "20230914",
 desc: "Helps convert relative offsets to linear addresses pulled from rule engines like YARA and ROST, with a UI to navigate between them."},

{name: "MazeWalker",
 url: "https://github.com/0xPhoeniX/MazeWalker",
 src: "py",
 cats: "trace",
 last: "20220116",
 desc: "Toolkit for enriching and speeding up static malware analysis. MazeWalker’s goal is to reduce malware analysis time by automating runtime data collection and better visualization eventually helping a researcher to concentrate on static analysis and less on its dynamic part."},

{name: "M-CORE_IDA-Pro",
 url: "https://github.com/MotoFanRu/M-CORE_IDA-Pro",
 src: "c++",
 cats: "proc",
 last: "20240420",
 vers: "8.3",
 desc: "M-CORE processor support module for IDA Pro (Motorola low-power microcontroller)."},

{name: "MED17 parser",
 url: "https://github.com/fknbrkn/IDA-PRO---MED17-python-script",
 src: "py",
 last: "20240223",
 vers: "7.4",
 desc: "Python script to parse MED17 / DSG files."},

{name: "Memory Loader",
 url: "https://github.com/SentineLabs/Memloader",
 src: "c++",
 cats: "loader",
 last: "20210326",
 vers: "7.4",
 desc: "IDA loader that allows loading malicious buffers to IDA without writing them to the disk.\n* UrlLoader - loads files from a URL.\n* MemZipLoader - loads files to encrypted / plain zip file.\n* So far only windows supported."},

{name: "MicroAVX",
 url: "https://github.com/gaasedelen/microavx",
 src: "py",
 cats: "decomp",
 last: "20200722",
 vers: "7.5",
 desc: "An AVX Lifter for the Hex-Rays Decompiler. It adds partial support for a number of common instructions from Intel's Advanced Vector Extensions (AVX). This plugin demonstrates how the Hex-Rays microcode can be used to lift and decompile new or previously unsupported instructions."},

{name: "mIDA",
 url: "https://github.com/tenable/mida",
 src: "c++",
 last: "20221129",
 desc: "MIDL Decompiler for IDA. Extracts RPC interfaces and recreates the associated IDL file. mIDA supports inline, interpreted and fully interpreted server stubs."},

{name: "MILF",
 url: "https://github.com/carlosgprado/milf",
 src: "py",
 last: "20130315",
 desc: "An IDA Pro swiss army knife (with a sexy name!) MILF is an IDA Pro plugin which automates several typical tasks in a RE session."},

{name: "mipsAudit",
 url: "https://github.com/giantbranch/mipsAudit",
 src: "py",
 last: "20211125",
 desc: "Static scan script, assembly audit helper script (IDA MIPS静态扫描脚本，汇编审计辅助脚本)."},

{name: "mipslocalvars",
 url: "https://github.com/devttys0/ida/tree/master/plugins/mipslocalvars",
 src: "py",
 last: "20210602",
 vers: "7.4",
 desc: "Names stack variables used by the compiler for storing registers on the stack, simplifying stack data analysis (MIPS only)."},

{name: "mipsrop",
 url: "https://github.com/devttys0/ida/tree/master/plugins/mipsrop",
 src: "py",
 last: "20210602",
 vers: "7.4",
 desc: "* Allows you to search for suitable ROP gadgets in MIPS executable code\n* Built-in methods to search for common ROP gadgets."},

{name: "Missing Link",
 url: "https://github.com/kweatherman/ida_missinglink",
 src: "c++",
 cats: "debug, int",
 last: "20230627",
 vers: "8.0",
 desc: "IDA Plugin that fills in missing indirect CALL & JMP target information in TTD windows trace files."},

{name: "Mizari's scripts",
 url: "https://github.com/Mizari/scripts",
 src: "py",
 last: "20230608",
 desc: "Various scripts for IDA Pro: const_adder, demangler, detect_offset, fastclear, recolour_calls, remove_spaces_from_structs."},

{name: "mkYARA IDA Plugin",
 url: "https://github.com/fox-it/mkYARA",
 src: "py",
 last: "20191216",
 vers: "7.4",
 desc: "IDA plugin to easily create YARA signatures with mkYARA."},

{name: "mrfarhadi-IDA_Plugin",
 url: "https://github.com/mrfarhadi/IDA_Plugin",
 src: "py",
 last: "20151020",
 desc: "Extract Call Graphs and Control Flow Graphs from an assembly file."},

{name: "MrsPicky",
 url: "https://github.com/patois/mrspicky",
 src: "py",
 cats: "decomp",
 last: "20240314",
 vers: "7.3",
 desc: "An IDAPython decompiler script that helps auditing calls to the memcpy() and memmove() functions."},

{name: "msdnGrab",
 url: "https://github.com/eugeneching/msdn-grab",
 src: "py",
 cats: "int",
 last: "20120722",
 vers: "6.2",
 desc: "Allows a user to grab documentation from online MSDN for a given function name in IDA, and import the documentation as a repeatable comment for that function. Handles queries for the Win32 API and C/C++."},

{name: "MSDN Helper",
 url: "https://github.com/yaseralnajjar/IDA-MSDN-helper",
 last: "20160905",
 desc: "This tool will help you to get to Offline MSDN help while using IDA Pro."},

{name: "MSDN IDA Pro Plugin",
 url: "https://github.com/zynamics/msdn-plugin-ida",
 src: "py",
 cats: "int",
 last: "20120110",
 desc: "Imports MSDN documentation into IDA Pro (by zynamics)."},

{name: "msp430emu",
 url: "https://github.com/cseagle/msp430emu",
 src: "c++",
 last: "20190322",
 vers: "7.1",
 desc: "An msp430 emulator plugin for Ida Pro."},

{name: "myda",
 url: "https://github.com/fevral/myda",
 src: "py",
 cats: "debug, int",
 last: "20231120",
 vers: "8.3",
 desc: "General Purpose IDA Plugin, currently a wrapper around vmrun to facilitate remote debugging of Windows PEs."},

{name: "MyNav",
 url: "https://code.google.com/p/mynav/",
 src: "c++",
 last: "20100903",
 vers: "5.6",
 desc: "MyNav is a plugin for IDA Pro to help reverse engineers in the most typical task like discovering what functions are responsible of some specifical tasks, finding paths between \"interesting\" functions and data entry points."},

{name: "nao",
 url: "https://github.com/tkmru/nao",
 src: "py",
 last: "20210505",
 desc: "nao (no-meaning assembly omitter) is dead code eliminator plugin for IDA pro."},

{name: "navigation_plugin",
 url: "https://github.com/RomanRybachek/navigation_plugin",
 src: "py",
 last: "20230903",
 desc: "Help navigate among the large number of unexplored functions in the ida pro disassembler."},

{name: "NDSLdr",
 url: "https://github.com/patois/NDSLdr",
 src: "c++",
 cats: "loader",
 last: "20170205",
 vers: "5.0",
 desc: "Nintendo DS ROM loader module for IDA Pro."},

{name: "NECromancer",
 url: "https://github.com/patois/NECromancer",
 src: "py",
 cats: "proc",
 last: "20180508",
 vers: "7.0",
 desc: "IDA Pro V850 Processor Module Extension."},

{name: "nesdbg",
 url: "https://github.com/patois/nesdbg",
 src: "c++",
 cats: "debug",
 last: "20181218",
 vers: "4.9",
 desc: "Failed attempt in creating an IDA Pro debugger plugin for NES ROMs"},

{name: "NES Loader",
 url: "https://github.com/patois/nesldr",
 src: "c++",
 cats: "loader",
 last: "20200226",
 vers: "4.9",
 desc: "Nintendo Entertainment System (NES) ROM loader module for IDA Pro."},

{name: "NES Loader (py)",
 url: "https://github.com/Jinmo/nesldr-py",
 src: "py",
 cats: "loader",
 last: "20210715",
 vers: "7.0",
 desc: "Nintendo Entertainment System (NES) ROM loader module for IDA Pro (Python port for IDA 7.x)."},

{name: "NIOS2",
 url: "https://github.com/ptresearch/nios2",
 src: "py",
 cats: "loader",
 last: "20180924",
 desc: "An IDA Pro processor module for Altera Nios II Classic/Gen2 microprocessor architecture."},

{name: "nmips",
 url: "https://github.com/0rganizers/nmips",
 src: "py",
 cats: "debug, loader, proc",
 last: "20210915",
 desc: "IDA plugin to enable nanoMIPS processor support. This is not limited to simple disassembly, but fully supports decompilation and even fixes up the stack in certain functions using custom microcode optimizers. It also supports relocations and automatic ELF detection (even though the UI might not show it, it kinda works). Debugging also works thanks to GDB and it also does some other stuff, such as automatic switch detections."},

{name: "NOP_Plugin",
 url: "https://github.com/RussianPanda95/NOP_Plugin",
 src: "py",
 last: "20230407",
 desc: "Plugin for NOPing instructions in IDA."},

{name: "NoVmpy",
 url: "https://github.com/wallds/NoVmpy",
 src: "py",
 cats: "deobf, int",
 last: "20230422",
 desc: "Proof of Concept, IDA integration of a static devirtualizer for VMProtect x64 3.x. powered by VTIL."},

{name: "NSIS Reversing Suite",
 url: "https://github.com/isra17/nrs",
 src: "py",
 cats: "loader",
 last: "20230515",
 vers: "7.0",
 desc: "NRS is a set of Python libraries used to unpack and analyse NSIS installer's data. It also features an IDA plugin used to disassemble the NSIS Script of an installer."},

{name: "obfDetect",
 url: "https://github.com/mcdulltii/obfDetect",
 src: "py",
 cats: "deobf",
 last: "20220429",
 vers: "7.4",
 desc: "A plugin to automatically detect obfuscated code and state machines in binaries."},

{name: "Obpo: Obfuscated Binary Pseudocode Optimizer",
 url: "https://github.com/obpo-project/obpo-plugin",
 src: "py",
 cats: "decomp, deobf",
 last: "20231205",
 vers: "7.7",
 desc: "Obpo is a microcode-based hex-rays optimizer, uses techniques such as static-program-analysis, dataflow-tracking, concolic-execution to rebuild the obfuscated control flow (such as: OLLVM)."},

{name: "oldidc",
 url: "https://github.com/joxeankoret/oldidc",
 src: "py",
 cats: "dev",
 last: "20191011",
 desc: "IDA Python's idc.py <= 7.3 compatibility module."},

{name: "Optimice",
 url: "https://code.google.com/p/optimice/",
 src: "py",
 cats: "deobf",
 last: "20120805",
 vers: "6.0",
 desc: "This plugin enables you to remove some common obfuscations and rewrite code to a new segment. Currently supported optimizations are: Dead code removal, JMP merging, JCC opaque predicate removal, Pattern based deobfuscations"},

{name: "Oregami",
 url: "https://github.com/shemesh999/oregami",
 src: "py",
 last: "20230608",
 desc: "A plugin analyzing the current function to find the usage frame of registers. Oregami eases the work when tracking the use of a register within a function, by limiting the search to occurrences related to the one currently highlighted instead of the whole function. It also allows localized renaming of the registers, and batch type giving to multiple opcodes using the registers."},

{name: "Package Manager",
 url: "https://github.com/Jinmo/idapkg",
 src: "py",
 last: "20210104",
 vers: "7.5",
 desc: "Packages for IDA Pro (written in python but supports all)."},

{name: "PacXplorer",
 url: "https://github.com/cellebrite-labs/PacXplorer",
 src: "py",
 last: "20220316",
 vers: "7.7",
 desc: "IDA plugin to find code cross references to virtual functions using PAC codes in ARM64e binaries."},

{name: "patchdiff2",
 url: "https://github.com/filcab/patchdiff2",
 src: "c++",
 last: "20150409",
 vers: "6.3",
 desc: "IDA binary differ."},

{name: "Patching",
 url: "https://github.com/gaasedelen/patching",
 src: "py",
 last: "20220210",
 vers: "7.6",
 desc: "Interactive Binary Patching for IDA Pro. This project extends the popular IDA Pro disassembler to create a more robust interactive binary patching workflow designed for rapid iteration."},

{name: "PCodeGPT",
 url: "https://github.com/lzyddf/IDA_Plugin_PCodeGPT",
 src: "py",
 cats: "int",
 last: "20231229",
 vers: "8.0",
 desc: "A ChatGPT based IDA automated analysis plugin (based off gepetto / WPeChatGPT)."},

{name: "PE Tree",
 url: "https://github.com/blackberry/pe_tree",
 src: "py",
 last: "20210517",
 vers: "7.4",
 desc: "Python module for viewing Portable Executable (PE) files in a tree-view using pefile and PyQt5."},

{name: "Pigaios",
 url: "https://github.com/joxeankoret/pigaios",
 src: "py",
 last: "20220719",
 vers: "7.0",
 desc: "Pigaios ('πηγαίος', Greek for 'source' as in 'source code') is a tool for diffing/matching source codes directly against binaries."},

{name: "pikabot-deobfuscator",
 url: "https://github.com/threatlabz/pikabot-deobfuscator",
 src: "c++",
 cats: "deobf",
 last: "20240408",
 vers: "8.0",
 desc: "An IDA plugin to deobfuscate Pikabot's strings using RC4 and AES."},

{name: "Pinokio",
 url: "https://github.com/kazabubu21/Pinokio",
 src: "py",
 cats: "decomp, int",
 last: "20221227",
 desc: "Use OpenAI's davinci-003 model to help with vulnerabilities research on functions decompiled by IDA Pro."},

{name: "pixel_loader",
 url: "https://github.com/0xAbby/pixel_loader",
 src: "py",
 cats: "loader",
 last: "20240205",
 vers: "8.3",
 desc: "An IDA Pro loader module for Pixel phone bootloader (abl stage), setting correct offsets, fixing function names, adding some C-style structs and annotations."},

{name: "Plus22",
 url: "https://github.com/v0s/plus22",
 src: "php",
 cats: "decomp",
 last: "20150111",
 desc: "Plus22 transforms x86_64 executables to be processed with 32-bit version of Hex-Rays Decompiler."},

{name: "Plympton",
 url: "https://github.com/rogwfu/plympton",
 src: "py",
 cats: "int",
 last: "20141125",
 desc: "A gem to read program disassembly from a YAML dump. The YAML dump is generated from an IDA Pro python script. This script is included along with this Gem (func.py)"},

{name: "Pomidor",
 url: "https://github.com/iphelix/ida-pomidor",
 src: "py",
 last: "20140923",
 desc: "IDA Pomidor is a plugin for Hex-Ray's IDA Pro disassembler that will help you retain concentration and productivity during long reversing sessions by encouraging you to take breaks."},

{name: "Ponce",
 url: "https://github.com/illera88/Ponce",
 src: "c++",
 last: "20230511",
 vers: "7.6",
 desc: "Taint analysis and symbolic execution over binaries in an easy and intuitive fashion."},

{name: "PopPySig",
 url: "https://github.com/sub1to/PopPySig",
 src: "py",
 last: "20221127",
 vers: "7.0",
 desc: "Make byte signatures and scan for byte signatures."},

{name: "PortAddresses",
 url: "https://github.com/szapp/PortAddresses",
 src: "py",
 cats: "",
 last: "20240201",
 desc: "IDA plugin aiding in porting memory addresses from one build executable to another."},

{name: "Post HexRays ANalysis Kit",
 url: "https://github.com/Mizari/phrank",
 src: "py",
 cats: "decomp",
 last: "20240320",
 vers: "7.5",
 desc: "Phrank helps with structure analysis and function pointers. Phrank works on top of HexRays ctrees."},

{name: "PPLorer",
 url: "https://github.com/cellebrite-labs/PPLorer",
 src: "py",
 last: "20230228",
 vers: "8.0",
 desc: "Plugin that resolves PPL calls to the actual underlying PPL function."},

{name: "Prefix",
 url: "https://github.com/gaasedelen/prefix",
 src: "py",
 last: "20200424",
 vers: "7.4",
 desc: "Prefix is a small function prefixing plugin for IDA Pro. The plugin augments IDA's function renaming capabilities by adding a handful of convenient prefixing actions to relevant right click menus."},

{name: "Processor changer",
 url: "https://github.com/techbliss/Processor-Changer",
 src: "py",
 cats: "proc",
 last: "20140811",
 vers: "6.5",
 desc: "Change processor without restarting IDA."},

{name: "proc_mem_ida_loader",
 url: "https://github.com/gamozolabs/proc_mem_ida_loader",
 src: "py",
 cats: "loader",
 last: "20220526",
 desc: "A /proc/mem IDA loader to snapshot a running process. This IDA loader can snapshot a running 32-bit or 64-bit Linux process, as well as 32-bit and 64-bit WINE processes on Linux, load it into IDA with the actual processes memory permissions, and then apply DWARF symbols using IDA's built-in DWARF loader for each loaded binary (that has DWARF symbols)!"},

{name: "Protobuf Finder",
 url: "https://github.com/Accenture/protobuf-finder",
 src: "py",
 last: "20220627",
 desc: "IDA plugin for reconstructing original .proto files from binary."},

{name: "ps2_ida_vu_micro",
 url: "https://github.com/Goatman13/ps2_ida_vu_micro",
 src: "py",
 last: "20240107",
 vers: "7.5",
 desc: "Plugin that tries to find and disassemble vu microcode in ps2 executables."},

{name: "PS5 .elf",
 url: "https://github.com/flatz/ida_ps5_elf_plugin",
 src: "py",
 cats: "loader",
 last: "20240123",
 vers: "7.5",
 desc: "PS5 elf loader for IDA 7.5"},

{name: "PSIDA",
 url: "https://github.com/soggysec/psida",
 src: "py",
 cats: "collab",
 last: "20180803",
 vers: "7.0",
 desc: "PSIDA is a collection of useful Python scripts for IDA. At this point, PSIDA focuses on collaborative reverse engineering in two models."},

{name: "pwndbg",
 url: "https://github.com/pwndbg/pwndbg",
 src: "py",
 cats: "debug, int",
 last: "20240515",
 vers: "7.0",
 desc: "GDB plug-in that makes debugging with GDB suck less, with a focus on features needed by low-level software developers, hardware hackers, reverse-engineers and exploit developers. NOTE: IDA integration through small XMLRPC server."},

{name: "pyhexraysdeob",
 url: "https://github.com/idapython/pyhexraysdeob",
 src: "py",
 cats: "deobf",
 last: "20191015",
 desc: "A port of Rolf Rolles' HexRaysDeob to Python."},

{name: "pyidbutil",
 url: "https://github.com/nlitsme/pyidbutil",
 src: "py",
 cats: "dev, int",
 last: "20230807",
 vers: "7.0",
 desc: "IDBTOOL - Library and tool for reading IDApro databases. (See C++ version 'idbutil')."},

{name: "pypyc2c",
 url: "https://github.com/Goatman13/pypyc2c",
 src: "py",
 last: "20230830",
 desc: "PowerPC to C plugin for IDA converted to python."},

{name: "pySigMaker",
 url: "https://github.com/therealzoomgod/pySigMaker",
 src: "py",
 last: "20221003",
 vers: "7.6",
 desc: "Port of IDA plugin SigMaker-x64 to IDAPython: plugin to make creating code signatures quick and simple."},

{name: "pytest-idapro",
 url: "https://github.com/nirizr/pytest-idapro",
 src: "py",
 cats: "dev",
 last: "20181103",
 desc: "A pytest module for The Interactive Disassembler and IDAPython; Record and Replay IDAPython API, execute inside IDA or use mockups of IDAPython API."},

{name: "Python Editor",
 url: "https://github.com/techbliss/Python_editor",
 src: "py",
 last: "20201225",
 vers: "7.5",
 desc: "Python editor based IDA Pro. The plugin helps python devs with scripting and running python scripts, and creating them. IT have many functions, code recognition and more."},

{name: "python-idb",
 url: "https://github.com/williballenthin/python-idb",
 src: "py",
 cats: "dev",
 last: "20210806",
 vers: "7.6",
 desc: "not an IDA Pro plugin but allows to open IDA databases (`*.idb` and `*.i64`) and run a simple subset of IDAPython API on top of them, without the IDA Pro itself."},

{name: "qb-sync",
 url: "https://github.com/quarkslab/qb-sync",
 src: "py",
 cats: "int",
 last: "20150713",
 desc: "qb-sync is an open source tool to add some helpful glue between IDA Pro and Windbg. Its core feature is to dynamically synchronize IDA's graph windows with Windbg's position."},

{name: "QScripts",
 url: "https://github.com/0xeb/ida-qscripts",
 src: "c++",
 cats: "dev",
 last: "20240520",
 vers: "7.7",
 desc: "An IDA scripting productivity plugin. With this plugin, you will be able to easily write and test scripts using your favorite editor. `ida-qscripts` will automatically detect changes to your script or one of its dependencies and automatically reload them and re-execute your script."},

{name: "QtMetaParser",
 url: "https://github.com/fjqisba/QtMetaParser",
 src: "c++",
 cats: "dev",
 last: "20230516",
 desc: "IDA plugin to parse qt meta data."},

{name: "QuakeVM",
 url: "https://hex-rays.com/contests_details/contest2023/quakevm/quakevm_contest_sub.zip",
 src: "c++",
 cats: "loader, proc",
 desc: "Loader and processor modules for the Quake 3 Virtual Machine used in the video game and the Rhadamanthys malware."},

{name: "Qualcomm Loader",
 url: "https://github.com/daxgr/qcom-mbn-ida-loader",
 src: "c++",
 cats: "loader",
 last: "20140123",
 desc: "IDA loader plugin for Qualcomm Bootloader Stages"},

{name: "quicksec",
 url: "https://github.com/coldheat/quicksec",
 src: "py",
 last: "20140510",
 desc: "IDAPython script for quick vulnerability analysis."},

{name: "Quokka",
 url: "https://github.com/quarkslab/quokka",
 src: "c++",
 cats: "int",
 last: "20240516",
 desc: "A Fast and Accurate Binary Exporter. From the disassembly of a program, it generates an export file that can be used without the disassembler."},

{name: "RDR2 IDA Native Renamer",
 url: "https://github.com/Sna1lLord/RDR2-IDA-Native-Renamer",
 src: "py",
 cats: "",
 last: "20230908",
 desc: "A simple python script which names all natives for Red Dead Redemption 2."},

{name: "Rebased Comment",
 url: "https://github.com/naim94a/rebasedcomment",
 src: "py",
 last: "20200406",
 vers: "7.0",
 desc: "Rebase comments when you rebase your IDA database, by searching for hexadecimal numbers that are within range of your program's segments, and fixing your comments after every rebase."},

{name: "Recompiler",
 url: "https://github.com/bastkerg/Recomp",
 src: "py",
 last: "20141208",
 desc: "IDA recompiler, no docs no help."},

{name: "RECON2017",
 url: "https://github.com/tmr232/RECon2017",
 src: "py",
 cats: "ui",
 last: "20170616",
 vers: "6.8",
 desc: "RECON 2017 IDA skin & color scheme"},

{name: "Reef",
 url: "https://github.com/darx0r/Reef",
 src: "py",
 last: "20160714",
 vers: "6.8",
 desc: "IDAPython plugin for finding Xrefs from a function."},

{name: "Referee",
 url: "https://github.com/joeleong/ida-referee",
 src: "py",
 cats: "decomp",
 last: "20210219",
 vers: "7.0",
 desc: "Find where structure members are used (Python port of James Koppel's Referee IDA plugin)."},

{name: "RefHUnter",
 url: "https://github.com/eternalklaus/RefHunter",
 src: "py",
 last: "20221217",
 vers: "7.6",
 desc: "User-friendly reference finder in IDA. RefHunter provides a summary of references for a function, which includes more information than the built-in “Function calls” widget."},

{name: "REmatch",
 url: "https://github.com/nirizr/rematch",
 src: "py",
 cats: "int",
 last: "20181128",
 desc: "REmatch, a complete binary diffing framework that works by revealing and identifying previously reverse engineered similar functions and migrating documentation and annotations to current IDB."},

{name: "Renamaida",
 url: "https://github.com/happyparsertod/Renamaida",
 src: "py",
 last: "20230421",
 desc: "Create your own signature database and rename open library functions."},

{name: "REobjc",
 url: "https://github.com/duo-labs/idapython",
 src: "py",
 last: "20180426",
 desc: "REobjc is an IDAPython module designed to make proper cross references between calling functions and called functions in Objective-C methods. The current form of the module supports X64, and will be updated to also support ARM in the future."},

{name: "RePEconstruct",
 url: "https://github.com/davidkorczynski/repeconstruct",
 cats: "int",
 last: "20161028",
 desc: "RePEconstruct is a tool for automatically unpacking binaries and rebuild the binaries in a manner well-suited for further analysis, specially focused on further manual analysis in IDA pro."},

{name: "RE Plugins",
 url: "https://github.com/dzzie/RE_Plugins",
 src: "c++",
 last: "20201027",
 desc: "Misc reverse engineering plugins released over the year: IDA_Jscript, IDA_JScript_w_DukDbg, IDASrvr, IDASRVR2, uGrapher, IdaVbScript, IdaUdpBridge, Wingraph32, gleegraph."},

{name: "REProgram",
 url: "https://github.com/jkoppel/REProgram",
 src: "c++",
 last: "20111227",
 vers: "6.1",
 desc: "A way of making almost-arbitrary changes to an executable when run under a debugger -- even changes that don't fit."},

{name: "resourcer",
 url: "https://github.com/cseagle/resourcer",
 src: "c++",
 last: "20190619",
 vers: "7.3",
 desc: "PE file resource enumeration plugin for IDA."},

{name: "retdec",
 url: "https://github.com/avast/retdec-idaplugin",
 src: "c++",
 cats: "decomp",
 last: "20240301",
 vers: "7.5",
 desc: "IDA plugin for retdec - a retargetable machine-code decompiler based on LLVM."},

{name: "ret-sync",
 url: "https://github.com/bootleg/ret-sync",
 src: "py",
 cats: "debug, int",
 last: "20230110",
 vers: "7.4",
 desc: "ret-sync stands for Reverse-Engineering Tools synchronization. It's a set of plugins that help to synchronize a debugging session (WinDbg/GDB/LLDB/OllyDbg2/x64dbg) with IDA disassembler. The underlying idea is simple: take the best from both worlds (static and dynamic analysis)."},

{name: "REtypedef",
 url: "https://github.com/zyantific/REtypedef",
 src: "c++",
 last: "20150103",
 vers: "6.7",
 desc: "REtypedef is an IDA PRO plugin that allows defining custom substitutions for function names. It comes with a default ruleset providing substitutions for many common STL types."},

{name: "RevEng.AI IDA Plugin",
 url: "https://github.com/RevEngAI/reai-ida",
 src: "py",
 cats: "int",
 last: "20240515",
 desc: "RevEng.AI IDA Pro Plugin."},

{name: "Revsync",
 url: "https://github.com/lunixbochs/revsync",
 src: "py",
 cats: "collab",
 last: "20220527",
 vers: "7.6",
 desc: "Realtime sync plugin for IDA Pro, Binary Ninja and Vivisect: realtime cross-tool collaborative reverse engineering."},

{name: "rizzo",
 url: "https://github.com/devttys0/ida/tree/master/plugins/rizzo",
 src: "py",
 last: "20210602",
 vers: "7.4",
 desc: "Identifies and re-names functions between two or more IDBs based on:\n* Formal signatures (i.e., exact function signatures)\n* References to unique string\n* References to unique constants\n* Fuzzy signatures (i.e., similar function signatures)\n* Call graphs (e.g., identification by association)"},

{name: "rso_ida_loader",
 url: "https://github.com/Megazig/rso_ida_loader",
 src: "c++",
 cats: "loader",
 last: "20130902",
 desc: "First step at Nintendo GameCube RSO/REL loading in IDA."},

{name: "RTTI Parser",
 url: "https://github.com/MlsDmitry/better-rtti-parser",
 src: "py",
 last: "20230310",
 vers: "7.6",
 desc: "IDA script to parse RTTI information in executable."},

{name: "rust_reverser_helper",
 url: "https://github.com/RobbeBryssinck/rust_reverser_helper",
 src: "py",
 last: "20230510",
 desc: "Ida Pro plugin to aid in reverse engineering Rust binaries."},

{name: "Samsung S4 Rom Loader",
 url: "https://github.com/cycad/mbn_loader",
 desc: "IDA Pro Loader Plugin for Samsung Galaxy S4 ROMs"},

{name: "Sark",
 url: "https://github.com/tmr232/Sark/",
 src: "py",
 cats: "dev",
 last: "20240313",
 vers: "7.4",
 desc: "Sark, (named after the notorious Tron villain,) is an object-oriented scripting layer written on top of IDAPython. Sark is easy to use and provides tools for writing advanced scripts and plugins."},

{name: "ScatterBee_Analysis",
 url: "https://github.com/PwCUK-CTO/ScatterBee_Analysis",
 src: "py",
 cats: "deobf, loader, proc",
 last: "20230106",
 vers: "7.6",
 desc: "IDA scripts to aid analysis of files obfuscated with ScatterBee."},

{name: "ScratchABit",
 url: "https://github.com/pfalcon/ScratchABit",
 last: "20201125",
 desc: "ScratchABit is an interactive incremental disassembler with data/control flow analysis capabilities. ScratchABit is dedicated to the efforts of the OpenSource reverse engineering community (reverse engineering to produce OpenSource drivers/firmware for hardware not properly supported by vendors)."},

{name: "Screen recorder",
 url: "https://github.com/techbliss/Ida_Pro_Screen_Recorder",
 src: "py",
 last: "20160727",
 vers: "6.9",
 desc: "IDA Pro Qt Plugin for recording reversing sessions."},

{name: "Sega Genesis/Megadrive Tools 2",
 url: "https://github.com/lab313ru/smd_ida_tools2",
 src: "c++",
 cats: "debug, loader",
 last: "20240315",
 vers: "7.5",
 desc: "Special IDA Pro tools for the Sega Genesis/Megadrive romhackers. Updated to at least IDA 7.5"},

{name: "Seida",
 url: "https://github.com/sandin/seida",
 src: "py",
 last: "20220915",
 desc: "Symbolic Execution plugin for IDA."},

{name: "ShannonRE",
 url: "https://github.com/Comsecuris/shannonRE/tree/master/idapython",
 src: "py",
 cats: "loader",
 last: "20160802",
 vers: "6.9",
 desc: "Helpful scripts for various tasks performed during reverse engineering the Shannon Baseband with the goal to exploit the Samsung Galaxy S6."},

{name: "ShowComments",
 url: "https://github.com/merces/showcomments",
 src: "py",
 last: "20240329",
 vers: "7.7",
 desc: "Conveniently view all comments in a database, and navigate quickly between them."},

{name: "Sig Maker",
 url: "https://github.com/ajkhoury/SigMaker-x64",
 src: "c++",
 last: "20220716",
 vers: "7.0",
 desc: "Can create sigs automatically and has a wide variety of functions."},

{name: "SigMakerEx",
 url: "https://github.com/kweatherman/sigmakerex",
 src: "c++",
 last: "20220807",
 vers: "7.6",
 desc: "Enhanced IDA Pro signature generator plugin."},

{name: "SimplifyGraph",
 url: "https://github.com/mandiant/SimplifyGraph",
 src: "c++",
 last: "20180129",
 vers: "6.95",
 desc: "An IDA Pro plugin to assist with complex graphs."},

{name: "Simulator",
 url: "https://github.com/nihilus/IDASimulator",
 src: "py",
 cats: "debug",
 last: "20140902",
 vers: "6.4",
 desc: "IDASimulator is a plugin that extends IDA's conditional breakpoint support, making it easy to augment / replace complex executable code inside a debugged process with Python code."},

{name: "Sk3wlDbg",
 url: "https://github.com/cseagle/sk3wldbg",
 src: "c++",
 cats: "debug",
 last: "20230417",
 vers: "7.5",
 desc: "Debugger plugin for IDA Pro. Front end for using the Unicorn Engine to emulate machine code that you are viewing with IDA."},

{name: "SmartDec Plugin",
 url: "https://github.com/smartdec/smartdec/tree/master/src/ida-plugin",
 src: "c++",
 cats: "decomp, int",
 last: "20150506",
 desc: "SmartDec integration for IDA. SmartDec is a native code to C/C++ decompiler."},

{name: "SmartJump",
 url: "https://github.com/PwCUK-CTO/SmartJump",
 src: "py",
 last: "20230724",
 vers: "7.2",
 desc: "IDA Pro plugin to enhance the JumpAsk 'g' keyboard shortcut."},

{name: "Snippet Detector",
 url: "https://github.com/zaironne/SnippetDetector",
 src: "py",
 last: "20150424",
 vers: "6.7",
 desc: "Snippet Detector is an IDA Python scripts project used to detect snippets from 32bit disassembled files. snippet is the word used to identify a generic sequence of instructions (at the moment a snippet is indeed a defined function). The aim of the tool is to collect many disassembled snippets inside a database for the detection process."},

{name: "Snowman Decompiler",
 url: "https://github.com/yegord/snowman",
 src: "c++",
 cats: "decomp",
 last: "20230308",
 desc: "Snowman is a native code to C/C++ decompiler. Standalone and IDA Plugin. [Source Code](https://github.com/yegord/snowman)"},

{name: "solana-ebpf-ida-processor",
 url: "https://github.com/PassKeyRa/solana-ebpf-ida-processor",
 src: "py",
 cats: "proc",
 last: "20240128",
 desc: "Solana Virtual Machine bytecode processor for IDA Pro (eBPF-based)."},

{name: "SpiritIDAPlugin",
 url: "https://github.com/Bratah123/SpiritIDAPlugin",
 src: "py",
 last: "20240306",
 desc: "SpiritIDAPlugin is an IDAPython-based plugin that offers an assortment of MapleStory client-reverse engineering tools."},

{name: "Splode",
 url: "https://github.com/zachriggle/ida-splode",
 src: "c++",
 last: "20141010",
 desc: "Augmenting Static Reverse Engineering with Dynamic Analysis and Instrumentation"},

{name: "spu3dbg",
 url: "https://github.com/revel8n/spu3dbg",
 src: "c++",
 cats: "debug",
 last: "20160328",
 desc: "Ida Pro debugger module for the anergistic SPU emulator."},

{name: "Stadeo",
 url: "https://github.com/eset/stadeo",
 src: "py",
 cats: "deobf",
 last: "20211108",
 desc: "Stadeo is a set of tools primarily developed to facilitate analysis of Stantinko, which is a botnet performing click fraud, ad injection, social network fraud, password stealing attacks and cryptomining, using IDA."},

{name: "static-analysis-plugin",
 url: "https://github.com/TheComputeGuy/static-analysis-plugin",
 src: "py",
 last: "20221025",
 desc: "An IDA Python plugin for CFG generation and data flow analysis on x86 binaries."},

{name: "Stingray",
 url: "https://github.com/darx0r/Stingray",
 src: "py",
 last: "20210319",
 vers: "7.2",
 desc: "Stingray is an IDAPython plugin for finding function strings. The search is from the current position onwards in the current function. It can do it recursively also with configurable search depth. The results order is the natural order of strings in the BFS search graph."},

{name: "Stm8Ida",
 url: "https://github.com/EgorKin/Stm8Ida",
 src: "c++",
 cats: "proc",
 last: "20191031",
 vers: "7.0",
 desc: "STM8 Ida Pro processor module. Support for STMicroelectronics' STM8 series of microcontrollers."},

{name: "StrAnnotate",
 url: "https://github.com/OALabs/StrAnnotate-IDA",
 src: "py",
 last: "20220929",
 vers: "7.0",
 desc: "Simple string annotation plugin for IDA. Annotate your IDB with externally decrypted strings tables. A few lines of python to make a tedious task into a click."},

{name: "StrikeOut",
 url: "https://github.com/allthingsida/strikeout",
 src: "c++",
 cats: "decomp",
 last: "20240428",
 desc: "IDA strike-out: A Hex-Rays decompiler plugin to patch the Ctree and hide junk code."},

{name: "structo",
 url: "https://github.com/dcbz/structo",
 src: "py",
 cats: "decomp",
 last: "20210201",
 desc: "Tool to merge structs generated with hexrays, or insert elements into pad."},

{name: "Structure Dump",
 url: "http://www.openrce.org/downloads/details/227/Structure_Dump",
 src: "c++",
 last: "20070405",
 desc: "StructDump is an IDA plugin, allowing you to export IDA types into high-level language definitions. Currently, C++ is supported."},

{name: "Styler",
 url: "https://github.com/techbliss/IDA-Styler",
 src: "py",
 cats: "ui",
 last: "20140725",
 vers: "6.5",
 desc: "Small Plugin to change the style of Ida Pro."},

{name: "SusanRTTI",
 url: "https://github.com/nccgroup/SusanRTTI",
 src: "py",
 last: "20230628",
 desc: "Another RTTI Parsing IDA plugin (GCC/MSVC)."},

{name: "Swift Demangle",
 url: "https://github.com/gsingh93/ida-swift-demangle",
 src: "py",
 last: "20160423",
 desc: "Demangle Swift function names. It currently only works for ELF files."},

{name: "SwitchIDAProLoader",
 url: "https://github.com/pgarba/switchidaproloader",
 src: "c++",
 cats: "loader",
 last: "20231219",
 vers: "7.6",
 desc: "Loader for IDA Pro to support the Nintendo Switch NRO binaries."},

{name: "SymExPorter",
 url: "https://github.com/k1rpi7ch/SymExPorter",
 src: "py",
 last: "20240330",
 vers: "7.5",
 desc: "A plugin for IDA, radare2, cutter & rizin to export recognized symbols to the ELF symbol table."},

{name: "Symless",
 url: "https://github.com/thalium/symless",
 src: "py",
 last: "20230925",
 vers: "7.6",
 desc: "Automatic structures recovering plugin for IDA. Able to reconstruct structures/classes and virtual tables used in a binary."},

{name: "syms2elf",
 url: "https://github.com/danigargu/syms2elf",
 src: "py",
 last: "20211117",
 vers: "7.5",
 desc: "A plugin for IDA Pro and radare2 to export the symbols recognized to the ELF symbol table."},

{name: "symseghelper",
 url: "https://github.com/therealdreg/symseghelper",
 src: "py",
 last: "20230811",
 vers: "7.4",
 desc: "Helper scripts for windows debugging with symbols for Bochs and IDA Pro (PDB files). Very handy for user mode <--> kernel mode."},

{name: "SyncReven",
 url: "https://github.com/riskeco/SyncReven",
 src: "py",
 cats: "int",
 last: "20210915",
 vers: "7.3",
 desc: "Reven integration plugin: synchronize the Axion current analysis window with some code opened in IDA."},

{name: "Synergy",
 url: "https://github.com/CubicaLabs/IDASynergy",
 src: "py",
 cats: "collab",
 last: "20150128",
 desc: "A combination of an IDAPython Plugin and a control version system that result in a new reverse engineering collaborative addon for IDA Pro. By http://cubicalabs.com/"},

{name: "SysNR-FuncFinder",
 url: "https://github.com/WPeace-HcH/SysNR-FuncFinder",
 src: "py",
 last: "20230920",
 vers: "7.4",
 desc: "Rename functions by system call numbers."},

{name: "Tarkus",
 url: "https://github.com/tmr232/Tarkus",
 src: "py",
 last: "20150813",
 vers: "6.7",
 desc: "Tarkus is a plugin manager for IDA Pro, modelled after Python's pip."},

{name: "Tenet",
 url: "https://github.com/gaasedelen/tenet",
 src: "py",
 cats: "trace",
 last: "20210914",
 vers: "7.5",
 desc: "A Trace Explorer for Reverse Engineers. Provide more natural, human controls for navigating execution traces against a given binary."},

{name: "ttddbg",
 url: "https://github.com/airbus-cert/ttddbg",
 src: "c++",
 cats: "debug, int",
 last: "20230607",
 desc: "Time Travel Debugging IDA plugin. Adds a new debugger to IDA which can read TTD traces generated by WinDBG or Visual Studio."},

{name: "TurboDiff",
 url: "http://www.coresecurity.com/corelabs-research/open-source-tools/turbodiff",
 src: "c++",
 last: "20111213",
 vers: "5.1",
 desc: "Turbodiff is a binary diffing tool developed as an IDA plugin. It discovers and analyzes differences between the functions of two binaries."},

{name: "UEFI_RETool",
 url: "https://github.com/yeggor/UEFI_RETool/tree/master/ida_plugin",
 src: "py",
 last: "20210803",
 vers: "7.2",
 desc: "IDA Plugin for UEFI firmware analysis. This plugin allows you to automatically analyse the input UEFI images, as well as search for dependencies between UEFI images in firmware."},

{name: "uEmu",
 url: "https://github.com/alexhude/uEmu",
 src: "py",
 last: "20231217",
 vers: "7.2",
 desc: "uEmu is a tiny cute emulator plugin for IDA based on unicorn engine. Supports following architectures out of the box: x86, x64, ARM, ARM64, MIPS, MIPS64"},

{name: "unity_metadata_loader",
 url: "https://github.com/nevermoe/unity_metadata_loader",
 src: "py",
 last: "20180718",
 desc: "Load strings and method/class names in global-metadata.dat to IDA."},

{name: "UserComment",
 url: "https://github.com/JayRE114514/UserComment",
 src: "py",
 last: "20230630",
 desc: "An IDA pro plugin to display user-added comments in disassembly and pseudocode views."},

{name: "Virtuailor",
 url: "https://github.com/0xgalz/Virtuailor",
 src: "py",
 last: "20200606",
 vers: "7.4",
 desc: "Virtuailor is an IDAPython tool that reconstructs vtables for C++ code written for intel architechture and both 32bit and 64bit code."},

{name: "VirusBattle",
 url: "https://github.com/axmat/virusbattle-ida-plugin",
 src: "py",
 cats: "int",
 last: "20150526",
 desc: "The plugin is an integration of Virus Battle API to the well known IDA Disassembler. Virusbattle is a web service that analyses malware and other binaries with a variety of advanced static and dynamic analyses."},

{name: "Vitaldr",
 url: "https://github.com/mailwl/vitaldr",
 src: "c++",
 cats: "loader",
 last: "20230221",
 vers: "7.0",
 desc: "IDA Pro loader plugin for PS Vita."},

{name: "VMAttack",
 url: "https://github.com/anatolikalysch/VMAttack",
 src: "py",
 cats: "deobf",
 last: "20171130",
 vers: "6.9",
 desc: "Static and dynamic virtualization-based packed analysis and deobfuscation."},

{name: "VmpHelper",
 url: "https://github.com/fjqisba/VmpHelper",
 src: "c++",
 last: "20240516",
 desc: "A vmp-analysis ida-plugin based on Ghidra, currently under development. Only supports Vmp3.5 x86. (In Chinese, no source)."},

{name: "Void",
 url: "https://github.com/dovezp/ida.plugin.void",
 src: "py",
 last: "20230820",
 vers: "7.5",
 desc: "A 'No Operation' Generator Plugin to effortlessly create NOP'd areas in your disassembly view. (Archived)."},

{name: "vtable-namer",
 url: "https://github.com/5fcc3e45/vtable-namer",
 src: "py",
 last: "20221115",
 desc: "IDA Pro python script to search for and label vtable methods in an executable dump."},

{name: "VTBL",
 url: "https://github.com/nektra/vtbl-ida-pro-plugin",
 src: "c++",
 last: "20130327",
 desc: "VTBL is an IDA script which identifies all the virtual tables found in any module of a native process. The virtual tables can be related to a COM or a C++ class."},

{name: "VT-IDA Plugin",
 url: "https://github.com/VirusTotal/vt-ida-plugin",
 src: "py",
 cats: "int",
 last: "20231127",
 desc: "This is the official VirusTotal plugin for Hex-Rays IDA Pro. This plugin integrates functionality from VirusTotal web services into the IDA Pro's user interface."},

{name: "VulChatGPT",
 url: "https://github.com/ke0z/VulChatGPT",
 src: "py",
 cats: "decomp, int",
 last: "20230223",
 desc: "Use IDA PRO HexRays decompiler with OpenAI(ChatGPT) to find possible vulnerabilities in binaries."},

{name: "VulFi",
 url: "https://github.com/Accenture/VulFi",
 src: "py",
 last: "20240415",
 vers: "7.5",
 desc: "The VulFi (Vulnerability Finder) tool is a plugin to IDA Pro which can be used to assist during bug hunting in binaries. Its main objective is to provide a single view with all cross-references to the most interesting functions (such as strcpy, sprintf, system, etc.)."},

{name: "Waffda",
 url: "https://github.com/OmriLevy888/Waffda",
 src: "py",
 cats: "decomp, dev",
 last: "20210617",
 desc: "IDA HexRays decompiler wrapper library."},

{name: "WakaTime",
 url: "https://github.com/es3n1n/ida-wakatime-py",
 src: "py",
 cats: "int",
 last: "20240103",
 vers: "7.7",
 desc: "WakaTime integration for IDA Pro: time tracking plugin showing the time you spend using IDA."},

{name: "wilhelm",
 url: "https://github.com/zerotypic/wilhelm",
 src: "py",
 cats: "decomp, dev",
 last: "20220203",
 vers: "7.0",
 desc: "Alternative API for IDA and Hex-Rays. wilhelm is an API for working with IDA, and in particular the Hex-Rays decompiler. It aims to wrap around the existing SDK's API, plus provide additional features and concepts that make reverse engineering easier."},

{name: "Win32 LST to Inline Assembly",
 url: "https://github.com/binrapt/ida",
 src: "py",
 last: "20090710",
 desc: "Python script which extracts procedures from IDA Win32 LST files and converts them to correctly dynamically linked compilable Visual C++ inline assembly."},

{name: "Windows Driver Plugin",
 url: "https://github.com/FSecureLABS/win_driver_plugin",
 src: "py",
 last: "20180822",
 vers: "7.0",
 desc: "A tool to help when dealing with Windows IOCTL codes or reversing Windows drivers."},

{name: "WinIOCtlDecoder",
 url: "https://github.com/tandasat/WinIoCtlDecoder",
 src: "py",
 last: "20231201",
 desc: "An IDA Pro plugin which decodes a Windows Device I/O control code into DeviceType, FunctionCode, AccessType and MethodType."},

{name: "WPeChatGPT",
 url: "https://github.com/WPeace-HcH/WPeChatGPT",
 src: "py",
 cats: "decomp",
 last: "20231204",
 desc: "Plugin that can help to analyze binary files using OpenAI's ChatGPT training API."},

{name: "WWCD",
 url: "https://github.com/sektioneins/wwcd",
 src: "c++",
 cats: "int",
 last: "20161129",
 desc: "What Would Capstone Decode - IDA plugin that implements a Capstone powered IDA view."},

{name: "x64dbgida",
 url: "https://github.com/x64dbg/x64dbgida",
 src: "py",
 cats: "debug, int",
 last: "20230116",
 vers: "7.0",
 desc: "Official x64dbg plugin for IDA Pro."},

{name: "X86Emu",
 url: "https://github.com/cseagle/x86emu",
 src: "c++",
 cats: "debug",
 last: "20230123",
 vers: "7.5",
 desc: "Embedded x86 emulator for Ida Pro. Its purpose is to allow a reverse engineer the chance to step through x86 code while reverse engineering a binary. The plugin can help you step through any x86 binary from any platform. For Windows binaries, many common library calls are trapped and emulated by the emulator, allowing for a higher fidelity emulation. I find it particularly useful for stepping through obfuscated code as it automatically reorganizes an IDA disassembly based on actual code paths."},

{name: "xdeobf",
 url: "https://github.com/teapotd/xdeobf",
 src: "c++",
 cats: "deobf",
 last: "20200324",
 vers: "7.2",
 desc: "Experimental deobfuscation plugin for IDA 7.2. It aims to reverse control flow flattening transformation that I encountered (probably a variation of obfuscator-llvm)."},

{name: "Xex Loader for IDA 6.6",
 url: "http://xorloser.com/blog/?p=395",
 cats: "loader",
 last: "20130923",
 vers: "6.6",
 desc: "This adds the ability to load xex files into IDA directly without having to first process them in any way. It processes the xex file as much as possible while loading to minimise the work required by the user to get it to a state fit for reversing."},

{name: "xorstr-decrypt-idaplugin",
 url: "https://github.com/Aspirin493/xorstr-decrypt-idaplugin",
 src: "py",
 cats: "deobf",
 last: "20230415",
 desc: "This is a plugin for IDA Pro that will help you deobfuscate xorstr strings in a windows x64 application."},

{name: "Xorstr Decryption Plugin",
 url: "https://github.com/yubie-re/ida-jm-xorstr-decrypt-plugin",
 src: "py",
 cats: "deobf",
 last: "20230309",
 vers: "8.0",
 desc: "Attempts to decrypt JM Xorstr obfuscated strings in some x64 binaries."},

{name: "xray",
 url: "https://github.com/patois/xray",
 src: "py",
 cats: "decomp, ui",
 last: "20231208",
 vers: "7.4",
 desc: "Hexrays decompiler plugin that colorizes and filters the decompiler's output based on regular expressions"},

{name: "XRaysComments",
 url: "https://github.com/MrNox/XRaysComments",
 src: "py",
 cats: "decomp",
 last: "20210903",
 desc: "A simple IDA Pro plugin to show all HexRays decompiler comments written by user."},

{name: "YaCo",
 url: "https://github.com/DGA-MI-SSI/YaCo",
 src: "py",
 cats: "collab",
 last: "20181114",
 vers: "7.1",
 desc: "Collaborative Reverse-Engineering for IDA. When enabled, an unlimited number of users can work simultaneously on the same binary. Any modification done by any user is synchronized through git version control. It has been initially released at [SSTIC 2017](https://www.sstic.org/2017/presentation/YaCo/)"},

{name: "Yagi",
 url: "https://github.com/airbus-cert/Yagi",
 src: "c++",
 cats: "decomp, int",
 last: "20220804",
 vers: "7.6",
 desc: "Yet Another Ghidra Integration for IDA. Yagi intends to include the wonderful Ghidra decompiler into both IDA pro and IDA Free."},

{name: "YARA for IDA",
 url: "https://github.com/kweatherman/yara4ida",
 src: "c++",
 cats: "int",
 last: "20220917",
 vers: "7.7",
 desc: "Unofficial YARA IDA Pro plugin, along with an unparalleled crypto/hash/compression rule set based on Luigi Auriemma's signsrch signatures."},

{name: "YaraScan",
 url: "https://github.com/snk37/yarascan-ida",
 src: "py",
 cats: "int",
 last: "20240123",
 desc: "Scan file with Yara rules."},

{name: "YaraForge",
 url: "https://github.com/zhaoxinnZ/YaraForge",
 src: "py",
 cats: "int",
 last: "20240531",
 desc: "A plugin that integrated capa explorer's scanning result and using mkYARA's rule generation logic to automatic export yara rules."},
 
{name: "Yarka",
 url: "https://github.com/AzzOnFire/yarka",
 src: "py",
 cats: "int",
 last: "20231125",
 desc: "IDA plugin for YARA signature creation from selections."},

];
